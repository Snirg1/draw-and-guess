{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/control-box.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\n\nvar ControlBox = props => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = {\n      opacity: 0\n    },\n    _checkedAndChild = {\n      opacity: 1\n    },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props;\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`;\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`;\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`;\n  const disabled = `input[type=${type}]:disabled + &`;\n  const focus = `input[type=${type}]:focus + &`;\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`;\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`;\n  const invalid = `input[type=${type}][aria-invalid=true] + &`;\n  const child = `& > *`;\n  return /* @__PURE__ */React.createElement(chakra.div, { ...rest,\n    \"aria-hidden\": true,\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0,\n      [focus]: _focus,\n      [hover]: _hover,\n      [disabled]: _disabled,\n      [invalid]: _invalid,\n      [checkedAndDisabled]: _checkedAndDisabled,\n      [checkedAndFocus]: _checkedAndFocus,\n      [checkedAndHover]: _checkedAndHover,\n      [child]: _child,\n      [checked]: { ..._checked,\n        [child]: _checkedAndChild\n      }\n    }\n  }, children);\n};\n\nControlBox.displayName = \"ControlBox\";\nexport { ControlBox };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/control-box/dist/index.esm.js"],"names":["React","chakra","ControlBox","props","type","_hover","_invalid","_disabled","_focus","_checked","_child","opacity","_checkedAndChild","_checkedAndDisabled","_checkedAndFocus","_checkedAndHover","children","rest","checkedAndDisabled","checkedAndHover","checkedAndFocus","disabled","focus","hover","checked","invalid","child","createElement","div","__css","display","alignItems","justifyContent","transitionProperty","transitionDuration","flexShrink","displayName"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AACA,IAAIC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AACJC,IAAAA,IAAI,GAAG,UADH;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,MAAM,GAAG;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAPL;AAQJC,IAAAA,gBAAgB,GAAG;AAAED,MAAAA,OAAO,EAAE;AAAX,KARf;AASJE,IAAAA,mBATI;AAUJC,IAAAA,gBAVI;AAWJC,IAAAA,gBAXI;AAYJC,IAAAA,QAZI;AAaJ,OAAGC;AAbC,MAcFd,KAdJ;AAeA,QAAMe,kBAAkB,GAAI,cAAad,IAAK,wBAA9C;AACA,QAAMe,eAAe,GAAI,cAAaf,IAAK,oCAA3C;AACA,QAAMgB,eAAe,GAAI,cAAahB,IAAK,qBAA3C;AACA,QAAMiB,QAAQ,GAAI,cAAajB,IAAK,gBAApC;AACA,QAAMkB,KAAK,GAAI,cAAalB,IAAK,aAAjC;AACA,QAAMmB,KAAK,GAAI,cAAanB,IAAK,0CAAjC;AACA,QAAMoB,OAAO,GAAI,cAAapB,IAAK,6BAA4BA,IAAK,2BAApE;AACA,QAAMqB,OAAO,GAAI,cAAarB,IAAK,0BAAnC;AACA,QAAMsB,KAAK,GAAI,OAAf;AACA,SAAO,eAAgB1B,KAAK,CAAC2B,aAAN,CAAoB1B,MAAM,CAAC2B,GAA3B,EAAgC,EACrD,GAAGX,IADkD;AAErD,mBAAe,IAFsC;AAGrDY,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE,aADJ;AAELC,MAAAA,UAAU,EAAE,QAFP;AAGLC,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,kBAAkB,EAAE,QAJf;AAKLC,MAAAA,kBAAkB,EAAE,MALf;AAMLC,MAAAA,UAAU,EAAE,CANP;AAOL,OAACb,KAAD,GAASd,MAPJ;AAQL,OAACe,KAAD,GAASlB,MARJ;AASL,OAACgB,QAAD,GAAYd,SATP;AAUL,OAACkB,OAAD,GAAWnB,QAVN;AAWL,OAACY,kBAAD,GAAsBL,mBAXjB;AAYL,OAACO,eAAD,GAAmBN,gBAZd;AAaL,OAACK,eAAD,GAAmBJ,gBAbd;AAcL,OAACW,KAAD,GAAShB,MAdJ;AAeL,OAACc,OAAD,GAAW,EACT,GAAGf,QADM;AAET,SAACiB,KAAD,GAASd;AAFA;AAfN;AAH8C,GAAhC,EAuBpBI,QAvBoB,CAAvB;AAwBD,CAjDD;;AAkDAd,UAAU,CAACkC,WAAX,GAAyB,YAAzB;AACA,SACElC,UADF","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/control-box.tsx\nimport { chakra } from \"@chakra-ui/system\";\nvar ControlBox = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props;\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`;\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`;\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`;\n  const disabled = `input[type=${type}]:disabled + &`;\n  const focus = `input[type=${type}]:focus + &`;\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`;\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`;\n  const invalid = `input[type=${type}][aria-invalid=true] + &`;\n  const child = `& > *`;\n  return /* @__PURE__ */ React.createElement(chakra.div, {\n    ...rest,\n    \"aria-hidden\": true,\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transitionProperty: \"common\",\n      transitionDuration: \"fast\",\n      flexShrink: 0,\n      [focus]: _focus,\n      [hover]: _hover,\n      [disabled]: _disabled,\n      [invalid]: _invalid,\n      [checkedAndDisabled]: _checkedAndDisabled,\n      [checkedAndFocus]: _checkedAndFocus,\n      [checkedAndHover]: _checkedAndHover,\n      [child]: _child,\n      [checked]: {\n        ..._checked,\n        [child]: _checkedAndChild\n      }\n    }\n  }, children);\n};\nControlBox.displayName = \"ControlBox\";\nexport {\n  ControlBox\n};\n"]},"metadata":{},"sourceType":"module"}