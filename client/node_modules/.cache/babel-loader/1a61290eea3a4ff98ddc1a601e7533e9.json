{"ast":null,"code":"// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\n\nfunction useDisclosure() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const id = idProp ?? `disclosure-${useId()}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n\n  function getButtonProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n\n      onClick(event) {\n        var _a;\n\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n\n    };\n  }\n\n  function getDisclosureProps() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\n\nexport { useDisclosure };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/react-use-disclosure/dist/index.esm.js"],"names":["useCallbackRef","useCallback","useState","useId","useDisclosure","props","onClose","onCloseProp","onOpen","onOpenProp","isOpen","isOpenProp","id","idProp","handleOpen","handleClose","isOpenState","setIsOpen","defaultIsOpen","isControlled","onToggle","getButtonProps","props2","onClick","event","_a","call","getDisclosureProps","hidden"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,mCAA/B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,KAAhC,QAA6C,OAA7C;;AACA,SAASC,aAAT,GAAmC;AAAA,MAAZC,KAAY,uEAAJ,EAAI;AACjC,QAAM;AACJC,IAAAA,OAAO,EAAEC,WADL;AAEJC,IAAAA,MAAM,EAAEC,UAFJ;AAGJC,IAAAA,MAAM,EAAEC,UAHJ;AAIJC,IAAAA,EAAE,EAAEC;AAJA,MAKFR,KALJ;AAMA,QAAMS,UAAU,GAAGd,cAAc,CAACS,UAAD,CAAjC;AACA,QAAMM,WAAW,GAAGf,cAAc,CAACO,WAAD,CAAlC;AACA,QAAM,CAACS,WAAD,EAAcC,SAAd,IAA2Bf,QAAQ,CAACG,KAAK,CAACa,aAAN,IAAuB,KAAxB,CAAzC;AACA,QAAMR,MAAM,GAAGC,UAAU,KAAK,KAAK,CAApB,GAAwBA,UAAxB,GAAqCK,WAApD;AACA,QAAMG,YAAY,GAAGR,UAAU,KAAK,KAAK,CAAzC;AACA,QAAMC,EAAE,GAAGC,MAAM,IAAK,cAAaV,KAAK,EAAG,EAA3C;AACA,QAAMG,OAAO,GAAGL,WAAW,CAAC,MAAM;AAChC,QAAI,CAACkB,YAAL,EAAmB;AACjBF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AACDF,IAAAA,WAAW,IAAI,IAAf,GAAsB,KAAK,CAA3B,GAA+BA,WAAW,EAA1C;AACD,GAL0B,EAKxB,CAACI,YAAD,EAAeJ,WAAf,CALwB,CAA3B;AAMA,QAAMP,MAAM,GAAGP,WAAW,CAAC,MAAM;AAC/B,QAAI,CAACkB,YAAL,EAAmB;AACjBF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDH,IAAAA,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,EAAxC;AACD,GALyB,EAKvB,CAACK,YAAD,EAAeL,UAAf,CALuB,CAA1B;AAMA,QAAMM,QAAQ,GAAGnB,WAAW,CAAC,MAAM;AACjC,QAAIS,MAAJ,EAAY;AACVJ,MAAAA,OAAO;AACR,KAFD,MAEO;AACLE,MAAAA,MAAM;AACP;AACF,GAN2B,EAMzB,CAACE,MAAD,EAASF,MAAT,EAAiBF,OAAjB,CANyB,CAA5B;;AAOA,WAASe,cAAT,GAAqC;AAAA,QAAbC,MAAa,uEAAJ,EAAI;AACnC,WAAO,EACL,GAAGA,MADE;AAEL,uBAAiBZ,MAFZ;AAGL,uBAAiBE,EAHZ;;AAILW,MAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,YAAIC,EAAJ;;AACA,SAACA,EAAE,GAAGH,MAAM,CAACC,OAAb,KAAyB,IAAzB,GAAgC,KAAK,CAArC,GAAyCE,EAAE,CAACC,IAAH,CAAQJ,MAAR,EAAgBE,KAAhB,CAAzC;AACAJ,QAAAA,QAAQ;AACT;;AARI,KAAP;AAUD;;AACD,WAASO,kBAAT,GAAyC;AAAA,QAAbL,MAAa,uEAAJ,EAAI;AACvC,WAAO,EACL,GAAGA,MADE;AAELM,MAAAA,MAAM,EAAE,CAAClB,MAFJ;AAGLE,MAAAA;AAHK,KAAP;AAKD;;AACD,SAAO;AACLF,IAAAA,MADK;AAELF,IAAAA,MAFK;AAGLF,IAAAA,OAHK;AAILc,IAAAA,QAJK;AAKLD,IAAAA,YALK;AAMLE,IAAAA,cANK;AAOLM,IAAAA;AAPK,GAAP;AASD;;AACD,SACEvB,aADF","sourcesContent":["// src/index.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useCallback, useState, useId } from \"react\";\nfunction useDisclosure(props = {}) {\n  const {\n    onClose: onCloseProp,\n    onOpen: onOpenProp,\n    isOpen: isOpenProp,\n    id: idProp\n  } = props;\n  const handleOpen = useCallbackRef(onOpenProp);\n  const handleClose = useCallbackRef(onCloseProp);\n  const [isOpenState, setIsOpen] = useState(props.defaultIsOpen || false);\n  const isOpen = isOpenProp !== void 0 ? isOpenProp : isOpenState;\n  const isControlled = isOpenProp !== void 0;\n  const id = idProp ?? `disclosure-${useId()}`;\n  const onClose = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(false);\n    }\n    handleClose == null ? void 0 : handleClose();\n  }, [isControlled, handleClose]);\n  const onOpen = useCallback(() => {\n    if (!isControlled) {\n      setIsOpen(true);\n    }\n    handleOpen == null ? void 0 : handleOpen();\n  }, [isControlled, handleOpen]);\n  const onToggle = useCallback(() => {\n    if (isOpen) {\n      onClose();\n    } else {\n      onOpen();\n    }\n  }, [isOpen, onOpen, onClose]);\n  function getButtonProps(props2 = {}) {\n    return {\n      ...props2,\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": id,\n      onClick(event) {\n        var _a;\n        (_a = props2.onClick) == null ? void 0 : _a.call(props2, event);\n        onToggle();\n      }\n    };\n  }\n  function getDisclosureProps(props2 = {}) {\n    return {\n      ...props2,\n      hidden: !isOpen,\n      id\n    };\n  }\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n    isControlled,\n    getButtonProps,\n    getDisclosureProps\n  };\n}\nexport {\n  useDisclosure\n};\n"]},"metadata":{},"sourceType":"module"}