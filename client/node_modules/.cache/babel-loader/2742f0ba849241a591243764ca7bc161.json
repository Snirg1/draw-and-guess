{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/env.tsx\n\nimport { createContext, startTransition, useContext, useMemo, useState, useEffect } from \"react\"; // src/mock-document.ts\n\nvar doc = {\n  body: {\n    classList: {\n      add() {},\n\n      remove() {}\n\n    }\n  },\n\n  addEventListener() {},\n\n  removeEventListener() {},\n\n  activeElement: {\n    blur() {},\n\n    nodeName: \"\"\n  },\n\n  querySelector() {\n    return null;\n  },\n\n  querySelectorAll() {\n    return [];\n  },\n\n  getElementById() {\n    return null;\n  },\n\n  createEvent() {\n    return {\n      initEvent() {}\n\n    };\n  },\n\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n\n      setAttribute() {},\n\n      getElementsByTagName() {\n        return [];\n      }\n\n    };\n  }\n\n};\nvar ssrDocument = doc; // src/mock-window.ts\n\nvar noop = () => {};\n\nvar win = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: \"\"\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: noop,\n  removeEventListener: noop,\n\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return \"\";\n      }\n\n    };\n  },\n\n  matchMedia() {\n    return {\n      matches: false,\n      addListener: noop,\n      removeListener: noop\n    };\n  },\n\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === \"undefined\") {\n      callback();\n      return null;\n    }\n\n    return setTimeout(callback, 0);\n  },\n\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === \"undefined\") return;\n    clearTimeout(id);\n  },\n\n  setTimeout: () => 0,\n  clearTimeout: noop,\n  setInterval: () => 0,\n  clearInterval: noop\n};\nvar ssrWindow = win; // src/env.tsx\n\nvar mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument\n};\nvar defaultEnv = typeof window !== \"undefined\" ? {\n  window,\n  document\n} : mockEnv;\nvar EnvironmentContext = createContext(defaultEnv);\nEnvironmentContext.displayName = \"EnvironmentContext\";\n\nfunction useEnvironment() {\n  return useContext(EnvironmentContext);\n}\n\nfunction EnvironmentProvider(props) {\n  const {\n    children,\n    environment: environmentProp\n  } = props;\n  const [node, setNode] = useState(null);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => setMounted(true), []);\n  const context = useMemo(() => {\n    if (environmentProp) {\n      return environmentProp;\n    }\n\n    const doc2 = node == null ? void 0 : node.ownerDocument;\n    const win2 = node == null ? void 0 : node.ownerDocument.defaultView;\n    const env = doc2 ? {\n      document: doc2,\n      window: win2\n    } : defaultEnv;\n    return env;\n  }, [node, environmentProp]);\n  return /* @__PURE__ */React.createElement(EnvironmentContext.Provider, {\n    value: context\n  }, children, !environmentProp && mounted && /* @__PURE__ */React.createElement(\"span\", {\n    id: \"__chakra_env\",\n    hidden: true,\n    ref: el => {\n      startTransition(() => {\n        if (el) setNode(el);\n      });\n    }\n  }));\n}\n\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\nexport { EnvironmentProvider, useEnvironment };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/react-env/dist/index.esm.js"],"names":["React","createContext","startTransition","useContext","useMemo","useState","useEffect","doc","body","classList","add","remove","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","ssrDocument","noop","win","document","navigator","userAgent","CustomEvent","getComputedStyle","getPropertyValue","matchMedia","matches","addListener","removeListener","requestAnimationFrame","callback","setTimeout","cancelAnimationFrame","id","clearTimeout","setInterval","clearInterval","ssrWindow","mockEnv","window","defaultEnv","EnvironmentContext","displayName","useEnvironment","EnvironmentProvider","props","environment","environmentProp","node","setNode","mounted","setMounted","context","doc2","ownerDocument","win2","defaultView","env","Provider","value","hidden","ref","el"],"mappings":"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","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/env.tsx\nimport {\n  createContext,\n  startTransition,\n  useContext,\n  useMemo,\n  useState,\n  useEffect\n} from \"react\";\n\n// src/mock-document.ts\nvar doc = {\n  body: {\n    classList: {\n      add() {\n      },\n      remove() {\n      }\n    }\n  },\n  addEventListener() {\n  },\n  removeEventListener() {\n  },\n  activeElement: {\n    blur() {\n    },\n    nodeName: \"\"\n  },\n  querySelector() {\n    return null;\n  },\n  querySelectorAll() {\n    return [];\n  },\n  getElementById() {\n    return null;\n  },\n  createEvent() {\n    return {\n      initEvent() {\n      }\n    };\n  },\n  createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute() {\n      },\n      getElementsByTagName() {\n        return [];\n      }\n    };\n  }\n};\nvar ssrDocument = doc;\n\n// src/mock-window.ts\nvar noop = () => {\n};\nvar win = {\n  document: ssrDocument,\n  navigator: {\n    userAgent: \"\"\n  },\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: noop,\n  removeEventListener: noop,\n  getComputedStyle() {\n    return {\n      getPropertyValue() {\n        return \"\";\n      }\n    };\n  },\n  matchMedia() {\n    return {\n      matches: false,\n      addListener: noop,\n      removeListener: noop\n    };\n  },\n  requestAnimationFrame(callback) {\n    if (typeof setTimeout === \"undefined\") {\n      callback();\n      return null;\n    }\n    return setTimeout(callback, 0);\n  },\n  cancelAnimationFrame(id) {\n    if (typeof setTimeout === \"undefined\")\n      return;\n    clearTimeout(id);\n  },\n  setTimeout: () => 0,\n  clearTimeout: noop,\n  setInterval: () => 0,\n  clearInterval: noop\n};\nvar ssrWindow = win;\n\n// src/env.tsx\nvar mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument\n};\nvar defaultEnv = typeof window !== \"undefined\" ? { window, document } : mockEnv;\nvar EnvironmentContext = createContext(defaultEnv);\nEnvironmentContext.displayName = \"EnvironmentContext\";\nfunction useEnvironment() {\n  return useContext(EnvironmentContext);\n}\nfunction EnvironmentProvider(props) {\n  const { children, environment: environmentProp } = props;\n  const [node, setNode] = useState(null);\n  const [mounted, setMounted] = useState(false);\n  useEffect(() => setMounted(true), []);\n  const context = useMemo(() => {\n    if (environmentProp) {\n      return environmentProp;\n    }\n    const doc2 = node == null ? void 0 : node.ownerDocument;\n    const win2 = node == null ? void 0 : node.ownerDocument.defaultView;\n    const env = doc2 ? { document: doc2, window: win2 } : defaultEnv;\n    return env;\n  }, [node, environmentProp]);\n  return /* @__PURE__ */ React.createElement(EnvironmentContext.Provider, {\n    value: context\n  }, children, !environmentProp && mounted && /* @__PURE__ */ React.createElement(\"span\", {\n    id: \"__chakra_env\",\n    hidden: true,\n    ref: (el) => {\n      startTransition(() => {\n        if (el)\n          setNode(el);\n      });\n    }\n  }));\n}\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\nexport {\n  EnvironmentProvider,\n  useEnvironment\n};\n"]},"metadata":{},"sourceType":"module"}