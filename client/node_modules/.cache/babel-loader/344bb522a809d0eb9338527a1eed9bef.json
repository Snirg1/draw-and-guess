{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/index.ts\n\nexport * from \"@chakra-ui/accordion\";\nexport * from \"@chakra-ui/alert\";\nexport * from \"@chakra-ui/avatar\";\nexport * from \"@chakra-ui/breadcrumb\";\nexport * from \"@chakra-ui/button\";\nexport * from \"@chakra-ui/checkbox\";\nexport * from \"@chakra-ui/close-button\";\nexport * from \"@chakra-ui/control-box\";\nexport * from \"@chakra-ui/counter\";\nexport * from \"@chakra-ui/css-reset\";\nexport * from \"@chakra-ui/editable\";\nexport * from \"@chakra-ui/form-control\";\nexport * from \"@chakra-ui/hooks\";\nexport * from \"@chakra-ui/icon\";\nexport * from \"@chakra-ui/image\";\nexport * from \"@chakra-ui/input\";\nexport * from \"@chakra-ui/layout\";\nexport * from \"@chakra-ui/media-query\";\nexport * from \"@chakra-ui/menu\";\nexport * from \"@chakra-ui/modal\";\nexport * from \"@chakra-ui/number-input\";\nexport * from \"@chakra-ui/pin-input\";\nexport * from \"@chakra-ui/popover\";\nexport * from \"@chakra-ui/popper\";\nexport * from \"@chakra-ui/portal\";\nexport * from \"@chakra-ui/progress\";\nexport * from \"@chakra-ui/radio\";\nexport * from \"@chakra-ui/react-env\";\nexport * from \"@chakra-ui/select\";\nexport * from \"@chakra-ui/skeleton\";\nexport * from \"@chakra-ui/slider\";\nexport * from \"@chakra-ui/spinner\";\nexport * from \"@chakra-ui/stat\";\nexport * from \"@chakra-ui/switch\";\nexport * from \"@chakra-ui/system\";\nexport * from \"@chakra-ui/table\";\nexport * from \"@chakra-ui/tabs\";\nexport * from \"@chakra-ui/tag\";\nexport * from \"@chakra-ui/textarea\";\nexport * from \"@chakra-ui/theme\";\nexport * from \"@chakra-ui/toast\";\nexport * from \"@chakra-ui/tooltip\";\nexport * from \"@chakra-ui/transition\";\nexport * from \"@chakra-ui/visually-hidden\"; // src/chakra-provider.tsx\n\nimport { ChakraProvider as BaseChakraProvider } from \"@chakra-ui/provider\";\nimport { theme as defaultTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider } from \"@chakra-ui/toast\";\n\nfunction ChakraProvider(_ref) {\n  let {\n    children,\n    theme: theme2 = defaultTheme,\n    toastOptions,\n    ...restProps\n  } = _ref;\n  return /* @__PURE__ */React.createElement(BaseChakraProvider, {\n    theme: theme2,\n    ...restProps\n  }, children, /* @__PURE__ */React.createElement(ToastProvider, { ...toastOptions\n  }));\n} // src/extend-theme.ts\n\n\nimport { theme, isChakraTheme } from \"@chakra-ui/theme\";\nimport { isFunction, mergeWith, pipe } from \"@chakra-ui/utils\";\n\nfunction extendTheme() {\n  for (var _len = arguments.length, extensions = new Array(_len), _key = 0; _key < _len; _key++) {\n    extensions[_key] = arguments[_key];\n  }\n\n  let overrides = [...extensions];\n  let baseTheme = extensions[extensions.length - 1];\n\n  if (isChakraTheme(baseTheme) && overrides.length > 1) {\n    overrides = overrides.slice(0, overrides.length - 1);\n  } else {\n    baseTheme = theme;\n  }\n\n  return pipe(...overrides.map(extension => prevTheme => isFunction(extension) ? extension(prevTheme) : mergeThemeOverride(prevTheme, extension)))(baseTheme);\n}\n\nfunction mergeThemeOverride() {\n  for (var _len2 = arguments.length, overrides = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    overrides[_key2] = arguments[_key2];\n  }\n\n  return mergeWith({}, ...overrides, mergeThemeCustomizer);\n}\n\nfunction mergeThemeCustomizer(source, override, key, object) {\n  if ((isFunction(source) || isFunction(override)) && Object.prototype.hasOwnProperty.call(object, key)) {\n    return function () {\n      const sourceValue = isFunction(source) ? source(...arguments) : source;\n      const overrideValue = isFunction(override) ? override(...arguments) : override;\n      return mergeWith({}, sourceValue, overrideValue, mergeThemeCustomizer);\n    };\n  }\n\n  return void 0;\n} // src/theme-extensions/with-default-color-scheme.ts\n\n\nimport { isObject, fromEntries } from \"@chakra-ui/utils\";\n\nfunction withDefaultColorScheme(_ref2) {\n  let {\n    colorScheme,\n    components\n  } = _ref2;\n  return theme2 => {\n    let names = Object.keys(theme2.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme2, {\n      components: fromEntries(names.map(componentName => {\n        const withColorScheme = {\n          defaultProps: {\n            colorScheme\n          }\n        };\n        return [componentName, withColorScheme];\n      }))\n    });\n  };\n} // src/theme-extensions/with-default-size.ts\n\n\nimport { isObject as isObject2, fromEntries as fromEntries2 } from \"@chakra-ui/utils\";\n\nfunction withDefaultSize(_ref3) {\n  let {\n    size,\n    components\n  } = _ref3;\n  return theme2 => {\n    let names = Object.keys(theme2.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject2(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme2, {\n      components: fromEntries2(names.map(componentName => {\n        const withSize = {\n          defaultProps: {\n            size\n          }\n        };\n        return [componentName, withSize];\n      }))\n    });\n  };\n} // src/theme-extensions/with-default-variant.ts\n\n\nimport { isObject as isObject3, fromEntries as fromEntries3 } from \"@chakra-ui/utils\";\n\nfunction withDefaultVariant(_ref4) {\n  let {\n    variant,\n    components\n  } = _ref4;\n  return theme2 => {\n    let names = Object.keys(theme2.components || {});\n\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject3(components)) {\n      names = Object.keys(components);\n    }\n\n    return mergeThemeOverride(theme2, {\n      components: fromEntries3(names.map(componentName => {\n        const withVariant = {\n          defaultProps: {\n            variant\n          }\n        };\n        return [componentName, withVariant];\n      }))\n    });\n  };\n} // src/theme-extensions/with-default-props.ts\n\n\nimport { pipe as pipe2 } from \"@chakra-ui/utils\";\n\nfunction withDefaultProps(_ref5) {\n  let {\n    defaultProps: {\n      colorScheme,\n      variant,\n      size\n    },\n    components\n  } = _ref5;\n\n  const identity = t => t;\n\n  const fns = [colorScheme ? withDefaultColorScheme({\n    colorScheme,\n    components\n  }) : identity, size ? withDefaultSize({\n    size,\n    components\n  }) : identity, variant ? withDefaultVariant({\n    variant,\n    components\n  }) : identity];\n  return theme2 => mergeThemeOverride(pipe2(...fns)(theme2));\n}\n\nexport { ChakraProvider, extendTheme, mergeThemeOverride, withDefaultColorScheme, withDefaultProps, withDefaultSize, withDefaultVariant };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/react/dist/index.esm.js"],"names":["React","ChakraProvider","BaseChakraProvider","theme","defaultTheme","ToastProvider","children","theme2","toastOptions","restProps","createElement","isChakraTheme","isFunction","mergeWith","pipe","extendTheme","extensions","overrides","baseTheme","length","slice","map","extension","prevTheme","mergeThemeOverride","mergeThemeCustomizer","source","override","key","object","Object","prototype","hasOwnProperty","call","sourceValue","overrideValue","isObject","fromEntries","withDefaultColorScheme","colorScheme","components","names","keys","Array","isArray","componentName","withColorScheme","defaultProps","isObject2","fromEntries2","withDefaultSize","size","withSize","isObject3","fromEntries3","withDefaultVariant","variant","withVariant","pipe2","withDefaultProps","identity","t","fns"],"mappings":"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","sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/index.ts\nexport * from \"@chakra-ui/accordion\";\nexport * from \"@chakra-ui/alert\";\nexport * from \"@chakra-ui/avatar\";\nexport * from \"@chakra-ui/breadcrumb\";\nexport * from \"@chakra-ui/button\";\nexport * from \"@chakra-ui/checkbox\";\nexport * from \"@chakra-ui/close-button\";\nexport * from \"@chakra-ui/control-box\";\nexport * from \"@chakra-ui/counter\";\nexport * from \"@chakra-ui/css-reset\";\nexport * from \"@chakra-ui/editable\";\nexport * from \"@chakra-ui/form-control\";\nexport * from \"@chakra-ui/hooks\";\nexport * from \"@chakra-ui/icon\";\nexport * from \"@chakra-ui/image\";\nexport * from \"@chakra-ui/input\";\nexport * from \"@chakra-ui/layout\";\nexport * from \"@chakra-ui/media-query\";\nexport * from \"@chakra-ui/menu\";\nexport * from \"@chakra-ui/modal\";\nexport * from \"@chakra-ui/number-input\";\nexport * from \"@chakra-ui/pin-input\";\nexport * from \"@chakra-ui/popover\";\nexport * from \"@chakra-ui/popper\";\nexport * from \"@chakra-ui/portal\";\nexport * from \"@chakra-ui/progress\";\nexport * from \"@chakra-ui/radio\";\nexport * from \"@chakra-ui/react-env\";\nexport * from \"@chakra-ui/select\";\nexport * from \"@chakra-ui/skeleton\";\nexport * from \"@chakra-ui/slider\";\nexport * from \"@chakra-ui/spinner\";\nexport * from \"@chakra-ui/stat\";\nexport * from \"@chakra-ui/switch\";\nexport * from \"@chakra-ui/system\";\nexport * from \"@chakra-ui/table\";\nexport * from \"@chakra-ui/tabs\";\nexport * from \"@chakra-ui/tag\";\nexport * from \"@chakra-ui/textarea\";\nexport * from \"@chakra-ui/theme\";\nexport * from \"@chakra-ui/toast\";\nexport * from \"@chakra-ui/tooltip\";\nexport * from \"@chakra-ui/transition\";\nexport * from \"@chakra-ui/visually-hidden\";\n\n// src/chakra-provider.tsx\nimport {\n  ChakraProvider as BaseChakraProvider\n} from \"@chakra-ui/provider\";\nimport { theme as defaultTheme } from \"@chakra-ui/theme\";\nimport { ToastProvider } from \"@chakra-ui/toast\";\nfunction ChakraProvider({\n  children,\n  theme: theme2 = defaultTheme,\n  toastOptions,\n  ...restProps\n}) {\n  return /* @__PURE__ */ React.createElement(BaseChakraProvider, {\n    theme: theme2,\n    ...restProps\n  }, children, /* @__PURE__ */ React.createElement(ToastProvider, {\n    ...toastOptions\n  }));\n}\n\n// src/extend-theme.ts\nimport { theme, isChakraTheme } from \"@chakra-ui/theme\";\nimport {\n  isFunction,\n  mergeWith,\n  pipe\n} from \"@chakra-ui/utils\";\nfunction extendTheme(...extensions) {\n  let overrides = [...extensions];\n  let baseTheme = extensions[extensions.length - 1];\n  if (isChakraTheme(baseTheme) && overrides.length > 1) {\n    overrides = overrides.slice(0, overrides.length - 1);\n  } else {\n    baseTheme = theme;\n  }\n  return pipe(...overrides.map((extension) => (prevTheme) => isFunction(extension) ? extension(prevTheme) : mergeThemeOverride(prevTheme, extension)))(baseTheme);\n}\nfunction mergeThemeOverride(...overrides) {\n  return mergeWith({}, ...overrides, mergeThemeCustomizer);\n}\nfunction mergeThemeCustomizer(source, override, key, object) {\n  if ((isFunction(source) || isFunction(override)) && Object.prototype.hasOwnProperty.call(object, key)) {\n    return (...args) => {\n      const sourceValue = isFunction(source) ? source(...args) : source;\n      const overrideValue = isFunction(override) ? override(...args) : override;\n      return mergeWith({}, sourceValue, overrideValue, mergeThemeCustomizer);\n    };\n  }\n  return void 0;\n}\n\n// src/theme-extensions/with-default-color-scheme.ts\nimport { isObject, fromEntries } from \"@chakra-ui/utils\";\nfunction withDefaultColorScheme({\n  colorScheme,\n  components\n}) {\n  return (theme2) => {\n    let names = Object.keys(theme2.components || {});\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject(components)) {\n      names = Object.keys(components);\n    }\n    return mergeThemeOverride(theme2, {\n      components: fromEntries(names.map((componentName) => {\n        const withColorScheme = {\n          defaultProps: {\n            colorScheme\n          }\n        };\n        return [componentName, withColorScheme];\n      }))\n    });\n  };\n}\n\n// src/theme-extensions/with-default-size.ts\nimport { isObject as isObject2, fromEntries as fromEntries2 } from \"@chakra-ui/utils\";\nfunction withDefaultSize({\n  size,\n  components\n}) {\n  return (theme2) => {\n    let names = Object.keys(theme2.components || {});\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject2(components)) {\n      names = Object.keys(components);\n    }\n    return mergeThemeOverride(theme2, {\n      components: fromEntries2(names.map((componentName) => {\n        const withSize = {\n          defaultProps: {\n            size\n          }\n        };\n        return [componentName, withSize];\n      }))\n    });\n  };\n}\n\n// src/theme-extensions/with-default-variant.ts\nimport { isObject as isObject3, fromEntries as fromEntries3 } from \"@chakra-ui/utils\";\nfunction withDefaultVariant({\n  variant,\n  components\n}) {\n  return (theme2) => {\n    let names = Object.keys(theme2.components || {});\n    if (Array.isArray(components)) {\n      names = components;\n    } else if (isObject3(components)) {\n      names = Object.keys(components);\n    }\n    return mergeThemeOverride(theme2, {\n      components: fromEntries3(names.map((componentName) => {\n        const withVariant = {\n          defaultProps: {\n            variant\n          }\n        };\n        return [componentName, withVariant];\n      }))\n    });\n  };\n}\n\n// src/theme-extensions/with-default-props.ts\nimport { pipe as pipe2 } from \"@chakra-ui/utils\";\nfunction withDefaultProps({\n  defaultProps: { colorScheme, variant, size },\n  components\n}) {\n  const identity = (t) => t;\n  const fns = [\n    colorScheme ? withDefaultColorScheme({ colorScheme, components }) : identity,\n    size ? withDefaultSize({ size, components }) : identity,\n    variant ? withDefaultVariant({ variant, components }) : identity\n  ];\n  return (theme2) => mergeThemeOverride(pipe2(...fns)(theme2));\n}\nexport {\n  ChakraProvider,\n  extendTheme,\n  mergeThemeOverride,\n  withDefaultColorScheme,\n  withDefaultProps,\n  withDefaultSize,\n  withDefaultVariant\n};\n"]},"metadata":{},"sourceType":"module"}