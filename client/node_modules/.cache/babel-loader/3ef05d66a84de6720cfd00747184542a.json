{"ast":null,"code":"// src/use-popper.ts\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { createPopper } from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\"; // src/utils.ts\n\nvar toVar = (value, fallback) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`\n});\n\nvar cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\")\n};\n\nfunction getBoxShadow(placement) {\n  if (placement.includes(\"top\")) return `1px 1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"bottom\")) return `-1px -1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"right\")) return `-1px 1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"left\")) return `1px -1px 1px 0 var(--popper-arrow-shadow-color)`;\n}\n\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\n\nvar toTransformOrigin = placement => transforms[placement];\n\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\n\nfunction getEventListenerOptions(value) {\n  let eventListeners;\n\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners,\n        ...value\n      }\n    };\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners\n    };\n  }\n\n  return eventListeners;\n} // src/modifiers.ts\n\n\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: _ref => {\n    let {\n      state\n    } = _ref;\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: _ref2 => {\n    let {\n      state\n    } = _ref2;\n    return () => {\n      const reference = state.elements.reference;\n      state.elements.popper.style.width = `${reference.offsetWidth}px`;\n    };\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: _ref3 => {\n    let {\n      state\n    } = _ref3;\n    setTransformOrigin(state);\n  },\n  effect: _ref4 => {\n    let {\n      state\n    } = _ref4;\n    return () => {\n      setTransformOrigin(state);\n    };\n  }\n};\n\nvar setTransformOrigin = state => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\n\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: _ref5 => {\n    let {\n      state\n    } = _ref5;\n    setArrowStyles(state);\n  }\n};\n\nvar setArrowStyles = state => {\n  var _a;\n\n  if (!state.placement) return;\n  const overrides = getArrowStyle(state.placement);\n\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\n\nvar getArrowStyle = placement => {\n  if (placement.startsWith(\"top\")) {\n    return {\n      property: \"bottom\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"bottom\")) {\n    return {\n      property: \"top\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"left\")) {\n    return {\n      property: \"right\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n\n  if (placement.startsWith(\"right\")) {\n    return {\n      property: \"left\",\n      value: cssVars.arrowOffset.varRef\n    };\n  }\n};\n\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: _ref6 => {\n    let {\n      state\n    } = _ref6;\n    setInnerArrowStyles(state);\n  },\n  effect: _ref7 => {\n    let {\n      state\n    } = _ref7;\n    return () => {\n      setInnerArrowStyles(state);\n    };\n  }\n};\n\nvar setInnerArrowStyles = state => {\n  if (!state.elements.arrow) return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner) return;\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement)\n  });\n}; // src/popper.placement.ts\n\n\nvar logicals = {\n  \"start-start\": {\n    ltr: \"left-start\",\n    rtl: \"right-start\"\n  },\n  \"start-end\": {\n    ltr: \"left-end\",\n    rtl: \"right-end\"\n  },\n  \"end-start\": {\n    ltr: \"right-start\",\n    rtl: \"left-start\"\n  },\n  \"end-end\": {\n    ltr: \"right-end\",\n    rtl: \"left-end\"\n  },\n  start: {\n    ltr: \"left\",\n    rtl: \"right\"\n  },\n  end: {\n    ltr: \"right\",\n    rtl: \"left\"\n  }\n};\nvar opposites = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\"\n};\n\nfunction getPopperPlacement(placement) {\n  let dir = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ltr\";\n\n  var _a;\n\n  const value = ((_a = logicals[placement]) == null ? void 0 : _a[dir]) || placement;\n  if (dir === \"ltr\") return value;\n  return opposites[placement] ?? value;\n} // src/use-popper.ts\n\n\nfunction usePopper() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth: matchWidth2,\n    direction = \"ltr\"\n  } = props;\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const placement = getPopperPlacement(placementProp, direction);\n  const cleanup = useRef(() => {});\n  const setupPopper = useCallback(() => {\n    var _a;\n\n    if (!enabled || !reference.current || !popper.current) return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [innerArrow, positionArrow, transformOrigin, { ...matchWidth,\n        enabled: !!matchWidth2\n      }, {\n        name: \"eventListeners\",\n        ...getEventListenerOptions(eventListeners)\n      }, {\n        name: \"arrow\",\n        options: {\n          padding: arrowPadding\n        }\n      }, {\n        name: \"offset\",\n        options: {\n          offset: offset ?? [0, gutter]\n        }\n      }, {\n        name: \"flip\",\n        enabled: !!flip,\n        options: {\n          padding: 8\n        }\n      }, {\n        name: \"preventOverflow\",\n        enabled: !!preventOverflow,\n        options: {\n          boundary\n        }\n      }, ...(modifiers ?? [])],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [placement, enabled, modifiers, matchWidth2, eventListeners, arrowPadding, offset, gutter, flip, preventOverflow, boundary, strategy]);\n  useEffect(() => {\n    return () => {\n      var _a;\n\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  const referenceRef = useCallback(node => {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: mergeRefs(referenceRef, ref)\n    };\n  }, [referenceRef]);\n  const popperRef = useCallback(node => {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: mergeRefs(popperRef, ref),\n      style: { ...props2.style,\n        position: strategy,\n        minWidth: matchWidth2 ? void 0 : \"max-content\",\n        inset: \"0 auto auto 0\"\n      }\n    };\n  }, [strategy, popperRef, matchWidth2]);\n  const getArrowProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    const {\n      size,\n      shadowColor,\n      bg,\n      style,\n      ...rest\n    } = props2;\n    return { ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle2(props2)\n    };\n  }, []);\n  const getArrowInnerProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref,\n      \"data-popper-arrow-inner\": \"\"\n    };\n  }, []);\n  return {\n    update() {\n      var _a;\n\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n\n    forceUpdate() {\n      var _a;\n\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps\n  };\n}\n\nfunction getArrowStyle2(props) {\n  const {\n    size,\n    shadowColor,\n    bg,\n    style\n  } = props;\n  const computedStyle = { ...style,\n    position: \"absolute\"\n  };\n\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n\n  return computedStyle;\n}\n\nexport { cssVars as popperCSSVars, usePopper };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/popper/dist/index.esm.js"],"names":["mergeRefs","createPopper","useCallback","useEffect","useRef","toVar","value","fallback","var","varRef","cssVars","arrowShadowColor","arrowSize","arrowSizeHalf","arrowBg","transformOrigin","arrowOffset","getBoxShadow","placement","includes","transforms","top","bottom","left","right","toTransformOrigin","defaultEventListeners","scroll","resize","getEventListenerOptions","eventListeners","enabled","options","matchWidth","name","phase","requires","fn","state","styles","popper","width","rects","reference","effect","elements","style","offsetWidth","setTransformOrigin","setProperty","positionArrow","setArrowStyles","_a","overrides","getArrowStyle","arrow","Object","assign","property","height","zIndex","vars","startsWith","innerArrow","setInnerArrowStyles","inner","querySelector","transform","background","position","boxShadow","logicals","ltr","rtl","start","end","opposites","getPopperPlacement","dir","usePopper","props","modifiers","placementProp","strategy","arrowPadding","offset","gutter","flip","boundary","preventOverflow","matchWidth2","direction","instance","cleanup","setupPopper","current","call","padding","forceUpdate","destroy","referenceRef","node","getReferenceProps","props2","ref","popperRef","getPopperProps","minWidth","inset","getArrowProps","size","shadowColor","bg","rest","getArrowStyle2","getArrowInnerProps","update","computedStyle","popperCSSVars"],"mappings":"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","sourcesContent":["// src/use-popper.ts\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  createPopper\n} from \"@popperjs/core\";\nimport { useCallback, useEffect, useRef } from \"react\";\n\n// src/utils.ts\nvar toVar = (value, fallback) => ({\n  var: value,\n  varRef: fallback ? `var(${value}, ${fallback})` : `var(${value})`\n});\nvar cssVars = {\n  arrowShadowColor: toVar(\"--popper-arrow-shadow-color\"),\n  arrowSize: toVar(\"--popper-arrow-size\", \"8px\"),\n  arrowSizeHalf: toVar(\"--popper-arrow-size-half\"),\n  arrowBg: toVar(\"--popper-arrow-bg\"),\n  transformOrigin: toVar(\"--popper-transform-origin\"),\n  arrowOffset: toVar(\"--popper-arrow-offset\")\n};\nfunction getBoxShadow(placement) {\n  if (placement.includes(\"top\"))\n    return `1px 1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"bottom\"))\n    return `-1px -1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"right\"))\n    return `-1px 1px 1px 0 var(--popper-arrow-shadow-color)`;\n  if (placement.includes(\"left\"))\n    return `1px -1px 1px 0 var(--popper-arrow-shadow-color)`;\n}\nvar transforms = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nvar toTransformOrigin = (placement) => transforms[placement];\nvar defaultEventListeners = {\n  scroll: true,\n  resize: true\n};\nfunction getEventListenerOptions(value) {\n  let eventListeners;\n  if (typeof value === \"object\") {\n    eventListeners = {\n      enabled: true,\n      options: { ...defaultEventListeners, ...value }\n    };\n  } else {\n    eventListeners = {\n      enabled: value,\n      options: defaultEventListeners\n    };\n  }\n  return eventListeners;\n}\n\n// src/modifiers.ts\nvar matchWidth = {\n  name: \"matchWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: ({ state }) => () => {\n    const reference = state.elements.reference;\n    state.elements.popper.style.width = `${reference.offsetWidth}px`;\n  }\n};\nvar transformOrigin = {\n  name: \"transformOrigin\",\n  enabled: true,\n  phase: \"write\",\n  fn: ({ state }) => {\n    setTransformOrigin(state);\n  },\n  effect: ({ state }) => () => {\n    setTransformOrigin(state);\n  }\n};\nvar setTransformOrigin = (state) => {\n  state.elements.popper.style.setProperty(cssVars.transformOrigin.var, toTransformOrigin(state.placement));\n};\nvar positionArrow = {\n  name: \"positionArrow\",\n  enabled: true,\n  phase: \"afterWrite\",\n  fn: ({ state }) => {\n    setArrowStyles(state);\n  }\n};\nvar setArrowStyles = (state) => {\n  var _a;\n  if (!state.placement)\n    return;\n  const overrides = getArrowStyle(state.placement);\n  if (((_a = state.elements) == null ? void 0 : _a.arrow) && overrides) {\n    Object.assign(state.elements.arrow.style, {\n      [overrides.property]: overrides.value,\n      width: cssVars.arrowSize.varRef,\n      height: cssVars.arrowSize.varRef,\n      zIndex: -1\n    });\n    const vars = {\n      [cssVars.arrowSizeHalf.var]: `calc(${cssVars.arrowSize.varRef} / 2)`,\n      [cssVars.arrowOffset.var]: `calc(${cssVars.arrowSizeHalf.varRef} * -1)`\n    };\n    for (const property in vars) {\n      state.elements.arrow.style.setProperty(property, vars[property]);\n    }\n  }\n};\nvar getArrowStyle = (placement) => {\n  if (placement.startsWith(\"top\")) {\n    return { property: \"bottom\", value: cssVars.arrowOffset.varRef };\n  }\n  if (placement.startsWith(\"bottom\")) {\n    return { property: \"top\", value: cssVars.arrowOffset.varRef };\n  }\n  if (placement.startsWith(\"left\")) {\n    return { property: \"right\", value: cssVars.arrowOffset.varRef };\n  }\n  if (placement.startsWith(\"right\")) {\n    return { property: \"left\", value: cssVars.arrowOffset.varRef };\n  }\n};\nvar innerArrow = {\n  name: \"innerArrow\",\n  enabled: true,\n  phase: \"main\",\n  requires: [\"arrow\"],\n  fn: ({ state }) => {\n    setInnerArrowStyles(state);\n  },\n  effect: ({ state }) => () => {\n    setInnerArrowStyles(state);\n  }\n};\nvar setInnerArrowStyles = (state) => {\n  if (!state.elements.arrow)\n    return;\n  const inner = state.elements.arrow.querySelector(\"[data-popper-arrow-inner]\");\n  if (!inner)\n    return;\n  Object.assign(inner.style, {\n    transform: \"rotate(45deg)\",\n    background: cssVars.arrowBg.varRef,\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    position: \"absolute\",\n    zIndex: \"inherit\",\n    boxShadow: getBoxShadow(state.placement)\n  });\n};\n\n// src/popper.placement.ts\nvar logicals = {\n  \"start-start\": { ltr: \"left-start\", rtl: \"right-start\" },\n  \"start-end\": { ltr: \"left-end\", rtl: \"right-end\" },\n  \"end-start\": { ltr: \"right-start\", rtl: \"left-start\" },\n  \"end-end\": { ltr: \"right-end\", rtl: \"left-end\" },\n  start: { ltr: \"left\", rtl: \"right\" },\n  end: { ltr: \"right\", rtl: \"left\" }\n};\nvar opposites = {\n  \"auto-start\": \"auto-end\",\n  \"auto-end\": \"auto-start\",\n  \"top-start\": \"top-end\",\n  \"top-end\": \"top-start\",\n  \"bottom-start\": \"bottom-end\",\n  \"bottom-end\": \"bottom-start\"\n};\nfunction getPopperPlacement(placement, dir = \"ltr\") {\n  var _a;\n  const value = ((_a = logicals[placement]) == null ? void 0 : _a[dir]) || placement;\n  if (dir === \"ltr\")\n    return value;\n  return opposites[placement] ?? value;\n}\n\n// src/use-popper.ts\nfunction usePopper(props = {}) {\n  const {\n    enabled = true,\n    modifiers,\n    placement: placementProp = \"bottom\",\n    strategy = \"absolute\",\n    arrowPadding = 8,\n    eventListeners = true,\n    offset,\n    gutter = 8,\n    flip = true,\n    boundary = \"clippingParents\",\n    preventOverflow = true,\n    matchWidth: matchWidth2,\n    direction = \"ltr\"\n  } = props;\n  const reference = useRef(null);\n  const popper = useRef(null);\n  const instance = useRef(null);\n  const placement = getPopperPlacement(placementProp, direction);\n  const cleanup = useRef(() => {\n  });\n  const setupPopper = useCallback(() => {\n    var _a;\n    if (!enabled || !reference.current || !popper.current)\n      return;\n    (_a = cleanup.current) == null ? void 0 : _a.call(cleanup);\n    instance.current = createPopper(reference.current, popper.current, {\n      placement,\n      modifiers: [\n        innerArrow,\n        positionArrow,\n        transformOrigin,\n        {\n          ...matchWidth,\n          enabled: !!matchWidth2\n        },\n        {\n          name: \"eventListeners\",\n          ...getEventListenerOptions(eventListeners)\n        },\n        {\n          name: \"arrow\",\n          options: { padding: arrowPadding }\n        },\n        {\n          name: \"offset\",\n          options: {\n            offset: offset ?? [0, gutter]\n          }\n        },\n        {\n          name: \"flip\",\n          enabled: !!flip,\n          options: { padding: 8 }\n        },\n        {\n          name: \"preventOverflow\",\n          enabled: !!preventOverflow,\n          options: { boundary }\n        },\n        ...modifiers ?? []\n      ],\n      strategy\n    });\n    instance.current.forceUpdate();\n    cleanup.current = instance.current.destroy;\n  }, [\n    placement,\n    enabled,\n    modifiers,\n    matchWidth2,\n    eventListeners,\n    arrowPadding,\n    offset,\n    gutter,\n    flip,\n    preventOverflow,\n    boundary,\n    strategy\n  ]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      if (!reference.current && !popper.current) {\n        (_a = instance.current) == null ? void 0 : _a.destroy();\n        instance.current = null;\n      }\n    };\n  }, []);\n  const referenceRef = useCallback((node) => {\n    reference.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getReferenceProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: mergeRefs(referenceRef, ref)\n  }), [referenceRef]);\n  const popperRef = useCallback((node) => {\n    popper.current = node;\n    setupPopper();\n  }, [setupPopper]);\n  const getPopperProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref: mergeRefs(popperRef, ref),\n    style: {\n      ...props2.style,\n      position: strategy,\n      minWidth: matchWidth2 ? void 0 : \"max-content\",\n      inset: \"0 auto auto 0\"\n    }\n  }), [strategy, popperRef, matchWidth2]);\n  const getArrowProps = useCallback((props2 = {}, ref = null) => {\n    const { size, shadowColor, bg, style, ...rest } = props2;\n    return {\n      ...rest,\n      ref,\n      \"data-popper-arrow\": \"\",\n      style: getArrowStyle2(props2)\n    };\n  }, []);\n  const getArrowInnerProps = useCallback((props2 = {}, ref = null) => ({\n    ...props2,\n    ref,\n    \"data-popper-arrow-inner\": \"\"\n  }), []);\n  return {\n    update() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.update();\n    },\n    forceUpdate() {\n      var _a;\n      (_a = instance.current) == null ? void 0 : _a.forceUpdate();\n    },\n    transformOrigin: cssVars.transformOrigin.varRef,\n    referenceRef,\n    popperRef,\n    getPopperProps,\n    getArrowProps,\n    getArrowInnerProps,\n    getReferenceProps\n  };\n}\nfunction getArrowStyle2(props) {\n  const { size, shadowColor, bg, style } = props;\n  const computedStyle = { ...style, position: \"absolute\" };\n  if (size) {\n    computedStyle[\"--popper-arrow-size\"] = size;\n  }\n  if (shadowColor) {\n    computedStyle[\"--popper-arrow-shadow-color\"] = shadowColor;\n  }\n  if (bg) {\n    computedStyle[\"--popper-arrow-bg\"] = bg;\n  }\n  return computedStyle;\n}\nexport {\n  cssVars as popperCSSVars,\n  usePopper\n};\n"]},"metadata":{},"sourceType":"module"}