{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/media-query.tsx\n\nimport { useTheme } from \"@chakra-ui/system\";\n\nvar getBreakpoint = (theme, value) => {\n  var _a;\n\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\n\nfunction useQuery(props) {\n  const {\n    breakpoint = \"\",\n    below,\n    above\n  } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n\n  return query;\n} // src/use-media-query.ts\n\n\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\n\nfunction useMediaQuery(query) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    ssr = true,\n    fallback\n  } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter(v => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map(query2 => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map(query2 => env.window.matchMedia(query2));\n\n    const handler = evt => {\n      setValue(prev => {\n        return prev.slice().map(item => {\n          if (item.media === evt.media) return { ...item,\n            matches: evt.matches\n          };\n          return item;\n        });\n      });\n    };\n\n    mql.forEach(mql2 => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach(mql2 => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map(item => item.matches);\n} // src/media-query.hook.ts\n\n\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\n\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return void 0;\n} // src/use-breakpoint.ts\n\n\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/dist/index.esm.js\n\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n} // src/use-breakpoint.ts\n\n\nfunction useBreakpoint(arg) {\n  var _a;\n\n  const opts = isObject(arg) ? arg : {\n    fallback: arg ?? \"base\"\n  };\n  const theme = useTheme2();\n\n  const breakpoints = theme.__breakpoints.details.map(_ref => {\n    let {\n      minMaxQuery,\n      breakpoint\n    } = _ref;\n    return {\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    };\n  });\n\n  const fallback = breakpoints.map(bp => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map(bp => bp.query), {\n    fallback,\n    ssr: opts.ssr\n  });\n  const index = values.findIndex(value => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n} // src/use-breakpoint-value.ts\n\n\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\"; // src/media-query.utils.ts\n\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\n\nfunction getClosestValue(values, breakpoint) {\n  let breakpoints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultBreakPoints;\n  let index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  let stopIndex = breakpoints.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n\n  return void 0;\n} // src/use-breakpoint-value.ts\n\n\nfunction useBreakpointValue(values, arg) {\n  var _a;\n\n  const opts = isObject(arg) ? arg : {\n    fallback: arg ?? \"base\"\n  };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint) return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(_ref2 => {\n    let [key, value] = _ref2;\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n} // src/visibility.tsx\n\n\nfunction Visibility(props) {\n  const {\n    breakpoint,\n    hide,\n    children,\n    ssr\n  } = props;\n  const [show] = useMediaQuery(breakpoint, {\n    ssr\n  });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n} // src/show.tsx\n\n\nfunction Show(props) {\n  const {\n    children,\n    ssr\n  } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\n\nShow.displayName = \"Show\"; // src/hide.tsx\n\nfunction Hide(props) {\n  const {\n    children,\n    ssr\n  } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\n\nHide.displayName = \"Hide\";\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/media-query/dist/index.esm.js"],"names":["React","useTheme","getBreakpoint","theme","value","_a","breakpoints","useQuery","props","breakpoint","below","above","bpBelow","bpAbove","query","useEnvironment","useEffect","useState","useMediaQuery","options","ssr","fallback","env","queries","Array","isArray","fallbackValues","filter","v","setValue","map","query2","index","media","matches","window","matchMedia","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","usePrefersReducedMotion","prefersReducedMotion","useColorModePreference","isLight","isDark","useTheme2","isObject","type","useBreakpoint","arg","opts","__breakpoints","details","minMaxQuery","replace","bp","values","findIndex","useTheme3","arrayToObjectNotation","defaultBreakPoints","getClosestValue","Object","keys","indexOf","stopIndex","key","hasOwnProperty","useBreakpointValue","from","obj","fromEntries","entries","Visibility","hide","children","show","isVisible","rendered","Show","createElement","displayName","Hide"],"mappings":"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","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a;\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\n// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map((query2) => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map((query2) => env.window.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map((item) => item.matches);\n}\n\n// src/media-query.hook.ts\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight)\n    return \"light\";\n  if (isDark)\n    return \"dark\";\n  return void 0;\n}\n\n// src/use-breakpoint.ts\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\n// src/use-breakpoint.ts\nfunction useBreakpoint(arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme2();\n  const breakpoints = theme.__breakpoints.details.map(({ minMaxQuery, breakpoint }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map((bp) => bp.query), { fallback, ssr: opts.ssr });\n  const index = values.findIndex((value) => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n}\n\n// src/use-breakpoint-value.ts\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\n// src/media-query.utils.ts\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\nfunction getClosestValue(values, breakpoint, breakpoints = defaultBreakPoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n  return void 0;\n}\n\n// src/use-breakpoint-value.ts\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(([key, value]) => [key, value])) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\n// src/show.tsx\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\nShow.displayName = \"Show\";\n\n// src/hide.tsx\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\nHide.displayName = \"Hide\";\nexport {\n  Hide,\n  Show,\n  useBreakpoint,\n  useBreakpointValue,\n  useColorModePreference,\n  useMediaQuery,\n  usePrefersReducedMotion,\n  useQuery\n};\n"]},"metadata":{},"sourceType":"module"}