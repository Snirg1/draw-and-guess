{"ast":null,"code":"var _jsxFileName = \"/Users/Snirgu1/Desktop/draw-and-guess/client/src/components/SketchCanvas.jsx\";\nimport React from \"react\";\nimport { ReactSketchCanvas } from \"react-sketch-canvas\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SketchCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = /*#__PURE__*/React.createRef(); // an immutable object with a single mutable value\n\n    this.socketRef = props.socketRef;\n    this.wordToDraw = props.wordToDraw;\n    this.wordLevel = props.wordLevel;\n    this.state = {\n      isImgExported: false,\n      img64Base: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 300,\n          height: 300,\n          backgroundColor: 'primary.dark',\n          '&:hover': {\n            backgroundColor: 'primary.main',\n            opacity: [0.9, 0.8, 0.7]\n          }\n        },\n        children: [!this.state.isImgExported && /*#__PURE__*/_jsxDEV(ReactSketchCanvas, {\n          className: \"sketch-canvas\",\n          ref: this.canvas,\n          strokeWidth: 2,\n          strokeColor: \"black\",\n          width: \"100%\",\n          height: \"80%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), !this.state.isImgExported && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.canvas.current.exportImage(\"png\").then(img => {\n              this.socketRef.current.emit(\"drawer_turn_finished\", {\n                image: img,\n                wordToDraw: this.wordToDraw,\n                wordLevel: this.wordLevel\n              });\n              this.setState({\n                isImgExported: true,\n                img64Base: img\n              });\n            }).catch(e => {\n              console.log(e);\n            });\n          },\n          children: \"Send!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 47\n        }, this), this.state.isImgExported && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"The final draw is: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }, this), this.state.isImgExported && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.img64Base,\n          alt: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 46\n        }, this), this.state.isImgExported && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Waiting to other player to guess...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SketchCanvas;","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/src/components/SketchCanvas.jsx"],"names":["React","ReactSketchCanvas","SketchCanvas","Component","constructor","props","canvas","createRef","socketRef","wordToDraw","wordLevel","state","isImgExported","img64Base","render","width","height","backgroundColor","opacity","current","exportImage","then","img","emit","image","setState","catch","e","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAO,aAAP;;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,MAAL,gBAAcN,KAAK,CAACO,SAAN,EAAd,CAFe,CAEkB;;AACjC,SAAKC,SAAL,GAAiBH,KAAK,CAACG,SAAvB;AACA,SAAKC,UAAL,GAAkBJ,KAAK,CAACI,UAAxB;AACA,SAAKC,SAAL,GAAiBL,KAAK,CAACK,SAAvB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,KADN;AAETC,MAAAA,SAAS,EAAE;AAFF,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,GAAD;AACI,QAAA,EAAE,EAAE;AACAC,UAAAA,KAAK,EAAE,GADP;AAEAC,UAAAA,MAAM,EAAE,GAFR;AAGAC,UAAAA,eAAe,EAAE,cAHjB;AAIA,qBAAW;AACPA,YAAAA,eAAe,EAAE,cADV;AAEPC,YAAAA,OAAO,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX;AAFF;AAJX,SADR;AAAA,mBAWC,CAAC,KAAKP,KAAL,CAAWC,aAAZ,iBACG,QAAC,iBAAD;AACI,UAAA,SAAS,EAAC,eADd;AAEI,UAAA,GAAG,EAAE,KAAKN,MAFd;AAGI,UAAA,WAAW,EAAE,CAHjB;AAII,UAAA,WAAW,EAAC,OAJhB;AAKI,UAAA,KAAK,EAAC,MALV;AAMI,UAAA,MAAM,EAAC;AANX;AAAA;AAAA;AAAA;AAAA,gBAZJ,EAoBC,CAAC,KAAKK,KAAL,CAAWC,aAAZ,iBAA6B;AAC1B,UAAA,OAAO,EAAE,MAAM;AACX,iBAAKN,MAAL,CAAYa,OAAZ,CAAoBC,WAApB,CAAgC,KAAhC,EACKC,IADL,CACUC,GAAG,IAAI;AACT,mBAAKd,SAAL,CAAeW,OAAf,CAAuBI,IAAvB,CAA4B,sBAA5B,EAAoD;AAChDC,gBAAAA,KAAK,EAAEF,GADyC;AAEhDb,gBAAAA,UAAU,EAAE,KAAKA,UAF+B;AAGhDC,gBAAAA,SAAS,EAAE,KAAKA;AAHgC,eAApD;AAKA,mBAAKe,QAAL,CAAc;AAACb,gBAAAA,aAAa,EAAE,IAAhB;AAAsBC,gBAAAA,SAAS,EAAES;AAAjC,eAAd;AACH,aARL,EASKI,KATL,CASWC,CAAC,IAAI;AACRC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH,aAXL;AAYH,WAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApB9B,EAqCC,KAAKhB,KAAL,CAAWC,aAAX,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArC7B,EAsCC,KAAKD,KAAL,CAAWC,aAAX,iBAA4B;AAAK,UAAA,GAAG,EAAE,KAAKD,KAAL,CAAWE,SAArB;AAAgC,UAAA,GAAG,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,gBAtC7B,EAuCC,KAAKF,KAAL,CAAWC,aAAX,iBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAvC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA6CH;;AA3DsC;;AA8D3C,eAAeV,YAAf","sourcesContent":["import React from \"react\";\nimport {ReactSketchCanvas} from \"react-sketch-canvas\";\nimport \"./style.css\"\n\nclass SketchCanvas extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvas = React.createRef(); // an immutable object with a single mutable value\n        this.socketRef = props.socketRef;\n        this.wordToDraw = props.wordToDraw;\n        this.wordLevel = props.wordLevel\n        this.state = {\n            isImgExported: false,\n            img64Base: null,\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Box\n                    sx={{\n                        width: 300,\n                        height: 300,\n                        backgroundColor: 'primary.dark',\n                        '&:hover': {\n                            backgroundColor: 'primary.main',\n                            opacity: [0.9, 0.8, 0.7],\n                        },\n                    }}\n                >\n                {!this.state.isImgExported &&\n                    <ReactSketchCanvas\n                        className=\"sketch-canvas\"\n                        ref={this.canvas}\n                        strokeWidth={2}\n                        strokeColor=\"black\"\n                        width=\"100%\"\n                        height=\"80%\"\n                    />}\n                {!this.state.isImgExported && <button\n                    onClick={() => {\n                        this.canvas.current.exportImage(\"png\")\n                            .then(img => {\n                                this.socketRef.current.emit(\"drawer_turn_finished\", {\n                                    image: img,\n                                    wordToDraw: this.wordToDraw,\n                                    wordLevel: this.wordLevel\n                                })\n                                this.setState({isImgExported: true, img64Base: img});\n                            })\n                            .catch(e => {\n                                console.log(e);\n                            });\n                    }}\n                >Send!\n                </button>}\n                {this.state.isImgExported && <h1>The final draw is: </h1>}\n                {this.state.isImgExported && <img src={this.state.img64Base} alt={null}/>}\n                {this.state.isImgExported && <h2>Waiting to other player to guess...</h2>}\n                    </Box>\n            </div>\n        )\n    }\n}\n\nexport default SketchCanvas\n\n"]},"metadata":{},"sourceType":"module"}