{"ast":null,"code":"// ../../../react-shim.js\nimport React from \"react\"; // src/accordion-button.tsx\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/dist/index.esm.js\n\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\n\nfunction isDev() {\n  return process.env.NODE_ENV !== \"production\";\n}\n\nvar warn = options => {\n  const {\n    condition,\n    message\n  } = options;\n\n  if (condition && isDev()) {\n    console.warn(message);\n  }\n};\n\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function func(event) {\n    fns.some(fn => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n} // src/accordion-context.ts\n\n\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AccordionStylesProvider, useAccordionStyles] = createContext({\n  name: \"AccordionStylesContext\",\n  hookName: \"useAccordionStyles\",\n  providerName: \"<Accordion />\"\n});\nvar [AccordionItemProvider, useAccordionItemContext] = createContext({\n  name: \"AccordionItemContext\",\n  hookName: \"useAccordionItemContext\",\n  providerName: \"<AccordionItem />\"\n});\nvar [AccordionDescendantsProvider, useAccordionDescendantsContext, useAccordionDescendants, useAccordionDescendant] = createDescendantContext(); // src/accordion-button.tsx\n\nvar AccordionButton = forwardRef(function AccordionButton2(props, ref) {\n  const {\n    getButtonProps\n  } = useAccordionItemContext();\n  const buttonProps = getButtonProps(props, ref);\n  const styles = useAccordionStyles();\n  const buttonStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.button\n  };\n  return /* @__PURE__ */React.createElement(chakra.button, { ...buttonProps,\n    className: cx(\"chakra-accordion__button\", props.className),\n    __css: buttonStyles\n  });\n});\nAccordionButton.displayName = \"AccordionButton\"; // src/accordion-icon.tsx\n\nimport { Icon } from \"@chakra-ui/icon\"; // src/use-accordion.ts\n\nimport { createContext as createContext2 } from \"@chakra-ui/react-context\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\";\n\nfunction useAccordion(props) {\n  const {\n    onChange,\n    defaultIndex,\n    index: indexProp,\n    allowMultiple,\n    allowToggle,\n    ...htmlProps\n  } = props;\n  allowMultipleWarning(props);\n  allowMultipleAndAllowToggleWarning(props);\n  const descendants = useAccordionDescendants();\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  useEffect(() => {\n    return () => {\n      setFocusedIndex(-1);\n    };\n  }, []);\n  const [index, setIndex] = useControllableState({\n    value: indexProp,\n\n    defaultValue() {\n      if (allowMultiple) return defaultIndex ?? [];\n      return defaultIndex ?? -1;\n    },\n\n    onChange\n  });\n\n  const getAccordionItemProps = idx => {\n    let isOpen = false;\n\n    if (idx !== null) {\n      isOpen = Array.isArray(index) ? index.includes(idx) : index === idx;\n    }\n\n    const onChange2 = isOpen2 => {\n      if (idx === null) return;\n\n      if (allowMultiple && Array.isArray(index)) {\n        const nextState = isOpen2 ? index.concat(idx) : index.filter(i => i !== idx);\n        setIndex(nextState);\n      } else if (isOpen2) {\n        setIndex(idx);\n      } else if (allowToggle) {\n        setIndex(-1);\n      }\n    };\n\n    return {\n      isOpen,\n      onChange: onChange2\n    };\n  };\n\n  return {\n    index,\n    setIndex,\n    htmlProps,\n    getAccordionItemProps,\n    focusedIndex,\n    setFocusedIndex,\n    descendants\n  };\n}\n\nvar [AccordionProvider, useAccordionContext] = createContext2({\n  name: \"AccordionContext\",\n  hookName: \"useAccordionContext\",\n  providerName: \"Accordion\"\n});\n\nfunction useAccordionItem(props) {\n  const {\n    isDisabled,\n    isFocusable,\n    id,\n    ...htmlProps\n  } = props;\n  const {\n    getAccordionItemProps,\n    setFocusedIndex\n  } = useAccordionContext();\n  const buttonRef = useRef(null);\n  const reactId = useId();\n  const uid = id ?? reactId;\n  const buttonId = `accordion-button-${uid}`;\n  const panelId = `accordion-panel-${uid}`;\n  focusableNotDisabledWarning(props);\n  const {\n    register,\n    index,\n    descendants\n  } = useAccordionDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const {\n    isOpen,\n    onChange\n  } = getAccordionItemProps(index === -1 ? null : index);\n  warnIfOpenAndDisabled({\n    isOpen,\n    isDisabled\n  });\n\n  const onOpen = () => {\n    onChange == null ? void 0 : onChange(true);\n  };\n\n  const onClose = () => {\n    onChange == null ? void 0 : onChange(false);\n  };\n\n  const onClick = useCallback(() => {\n    onChange == null ? void 0 : onChange(!isOpen);\n    setFocusedIndex(index);\n  }, [index, setFocusedIndex, isOpen, onChange]);\n  const onKeyDown = useCallback(event => {\n    const keyMap = {\n      ArrowDown: () => {\n        const next = descendants.nextEnabled(index);\n        next == null ? void 0 : next.node.focus();\n      },\n      ArrowUp: () => {\n        const prev = descendants.prevEnabled(index);\n        prev == null ? void 0 : prev.node.focus();\n      },\n      Home: () => {\n        const first = descendants.firstEnabled();\n        first == null ? void 0 : first.node.focus();\n      },\n      End: () => {\n        const last = descendants.lastEnabled();\n        last == null ? void 0 : last.node.focus();\n      }\n    };\n    const action = keyMap[event.key];\n\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, index]);\n  const onFocus = useCallback(() => {\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index]);\n  const getButtonProps = useCallback(function getButtonProps2() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      type: \"button\",\n      ref: mergeRefs(register, buttonRef, ref),\n      id: buttonId,\n      disabled: !!isDisabled,\n      \"aria-expanded\": !!isOpen,\n      \"aria-controls\": panelId,\n      onClick: callAllHandlers(props2.onClick, onClick),\n      onFocus: callAllHandlers(props2.onFocus, onFocus),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown)\n    };\n  }, [buttonId, isDisabled, isOpen, onClick, onFocus, onKeyDown, panelId, register]);\n  const getPanelProps = useCallback(function getPanelProps2() {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref,\n      role: \"region\",\n      id: panelId,\n      \"aria-labelledby\": buttonId,\n      hidden: !isOpen\n    };\n  }, [buttonId, isOpen, panelId]);\n  return {\n    isOpen,\n    isDisabled,\n    isFocusable,\n    onOpen,\n    onClose,\n    getButtonProps,\n    getPanelProps,\n    htmlProps\n  };\n}\n\nfunction allowMultipleWarning(props) {\n  const index = props.index || props.defaultIndex;\n  const condition = index == null && !Array.isArray(index) && props.allowMultiple;\n  warn({\n    condition: !!condition,\n    message: `If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: ${typeof index},`\n  });\n}\n\nfunction allowMultipleAndAllowToggleWarning(props) {\n  warn({\n    condition: !!(props.allowMultiple && props.allowToggle),\n    message: `If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not`\n  });\n}\n\nfunction focusableNotDisabledWarning(props) {\n  warn({\n    condition: !!(props.isFocusable && !props.isDisabled),\n    message: `Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    `\n  });\n}\n\nfunction warnIfOpenAndDisabled(props) {\n  warn({\n    condition: props.isOpen && !!props.isDisabled,\n    message: \"Cannot open a disabled accordion item\"\n  });\n} // src/accordion-icon.tsx\n\n\nfunction AccordionIcon(props) {\n  const {\n    isOpen,\n    isDisabled\n  } = useAccordionItemContext();\n  const {\n    reduceMotion\n  } = useAccordionContext();\n\n  const _className = cx(\"chakra-accordion__icon\", props.className);\n\n  const styles = useAccordionStyles();\n  const iconStyles = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : void 0,\n    transition: reduceMotion ? void 0 : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon\n  };\n  return /* @__PURE__ */React.createElement(Icon, {\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": true,\n    className: _className,\n    __css: iconStyles,\n    ...props\n  }, /* @__PURE__ */React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }));\n}\n\nAccordionIcon.displayName = \"AccordionIcon\"; // src/accordion-item.tsx\n\nimport { chakra as chakra2, forwardRef as forwardRef2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nvar AccordionItem = forwardRef2(function AccordionItem2(props, ref) {\n  const {\n    children,\n    className\n  } = props;\n  const {\n    htmlProps,\n    ...context\n  } = useAccordionItem(props);\n  const styles = useAccordionStyles();\n  const containerStyles = { ...styles.container,\n    overflowAnchor: \"none\"\n  };\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */React.createElement(AccordionItemProvider, {\n    value: ctx\n  }, /* @__PURE__ */React.createElement(chakra2.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion__item\", className),\n    __css: containerStyles\n  }, typeof children === \"function\" ? children({\n    isExpanded: !!context.isOpen,\n    isDisabled: !!context.isDisabled\n  }) : children));\n});\nAccordionItem.displayName = \"AccordionItem\"; // src/accordion-panel.tsx\n\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nvar AccordionPanel = forwardRef3(function AccordionPanel2(props, ref) {\n  const {\n    reduceMotion\n  } = useAccordionContext();\n  const {\n    getPanelProps,\n    isOpen\n  } = useAccordionItemContext();\n  const panelProps = getPanelProps(props, ref);\n\n  const _className = cx(\"chakra-accordion__panel\", props.className);\n\n  const styles = useAccordionStyles();\n\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n\n  const child = /* @__PURE__ */React.createElement(chakra3.div, { ...panelProps,\n    __css: styles.panel,\n    className: _className\n  });\n\n  if (!reduceMotion) {\n    return /* @__PURE__ */React.createElement(Collapse, {\n      in: isOpen\n    }, child);\n  }\n\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\"; // src/accordion.tsx\n\nimport { chakra as chakra4, forwardRef as forwardRef4, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { useMemo as useMemo2 } from \"react\";\nvar Accordion = forwardRef4(function Accordion2(_ref, ref) {\n  let {\n    children,\n    reduceMotion,\n    ...props\n  } = _ref;\n  const styles = useMultiStyleConfig(\"Accordion\", props);\n  const ownProps = omitThemingProps(props);\n  const {\n    htmlProps,\n    descendants,\n    ...context\n  } = useAccordion(ownProps);\n  const ctx = useMemo2(() => ({ ...context,\n    reduceMotion: !!reduceMotion\n  }), [context, reduceMotion]);\n  return /* @__PURE__ */React.createElement(AccordionDescendantsProvider, {\n    value: descendants\n  }, /* @__PURE__ */React.createElement(AccordionProvider, {\n    value: ctx\n  }, /* @__PURE__ */React.createElement(AccordionStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */React.createElement(chakra4.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion\", props.className),\n    __css: styles.root\n  }, children))));\n});\nAccordion.displayName = \"Accordion\"; // src/use-accordiont-item-state.ts\n\nfunction useAccordionItemState() {\n  const {\n    isOpen,\n    isDisabled,\n    onClose,\n    onOpen\n  } = useAccordionItemContext();\n  return {\n    isOpen,\n    onClose,\n    isDisabled,\n    onOpen\n  };\n}\n\nexport { Accordion, AccordionButton, AccordionIcon, AccordionItem, AccordionPanel, AccordionProvider, useAccordion, useAccordionContext, useAccordionItem, useAccordionItemState, useAccordionStyles };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/accordion/dist/index.esm.js"],"names":["React","chakra","forwardRef","cx","classNames","filter","Boolean","join","isDev","process","env","NODE_ENV","warn","options","condition","message","console","callAllHandlers","fns","func","event","some","fn","defaultPrevented","createDescendantContext","createContext","AccordionStylesProvider","useAccordionStyles","name","hookName","providerName","AccordionItemProvider","useAccordionItemContext","AccordionDescendantsProvider","useAccordionDescendantsContext","useAccordionDescendants","useAccordionDescendant","AccordionButton","AccordionButton2","props","ref","getButtonProps","buttonProps","styles","buttonStyles","display","alignItems","width","outline","button","createElement","className","__css","displayName","Icon","createContext2","useControllableState","mergeRefs","useCallback","useEffect","useId","useRef","useState","useAccordion","onChange","defaultIndex","index","indexProp","allowMultiple","allowToggle","htmlProps","allowMultipleWarning","allowMultipleAndAllowToggleWarning","descendants","focusedIndex","setFocusedIndex","setIndex","value","defaultValue","getAccordionItemProps","idx","isOpen","Array","isArray","includes","onChange2","isOpen2","nextState","concat","i","AccordionProvider","useAccordionContext","useAccordionItem","isDisabled","isFocusable","id","buttonRef","reactId","uid","buttonId","panelId","focusableNotDisabledWarning","register","disabled","warnIfOpenAndDisabled","onOpen","onClose","onClick","onKeyDown","keyMap","ArrowDown","next","nextEnabled","node","focus","ArrowUp","prev","prevEnabled","Home","first","firstEnabled","End","last","lastEnabled","action","key","preventDefault","onFocus","getButtonProps2","props2","type","getPanelProps","getPanelProps2","role","hidden","AccordionIcon","reduceMotion","_className","iconStyles","opacity","transform","transition","transformOrigin","icon","viewBox","fill","d","chakra2","forwardRef2","useMemo","AccordionItem","AccordionItem2","children","context","containerStyles","container","overflowAnchor","ctx","div","isExpanded","chakra3","forwardRef3","Collapse","AccordionPanel","AccordionPanel2","panelProps","child","panel","in","chakra4","forwardRef4","omitThemingProps","useMultiStyleConfig","useMemo2","Accordion","Accordion2","ownProps","root","useAccordionItemState"],"mappings":"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","sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/accordion-button.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isDev() {\n  return process.env.NODE_ENV !== \"production\";\n}\nvar warn = (options) => {\n  const { condition, message } = options;\n  if (condition && isDev()) {\n    console.warn(message);\n  }\n};\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\n// src/accordion-context.ts\nimport { createDescendantContext } from \"@chakra-ui/descendant\";\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [AccordionStylesProvider, useAccordionStyles] = createContext({\n  name: \"AccordionStylesContext\",\n  hookName: \"useAccordionStyles\",\n  providerName: \"<Accordion />\"\n});\nvar [AccordionItemProvider, useAccordionItemContext] = createContext({\n  name: \"AccordionItemContext\",\n  hookName: \"useAccordionItemContext\",\n  providerName: \"<AccordionItem />\"\n});\nvar [\n  AccordionDescendantsProvider,\n  useAccordionDescendantsContext,\n  useAccordionDescendants,\n  useAccordionDescendant\n] = createDescendantContext();\n\n// src/accordion-button.tsx\nvar AccordionButton = forwardRef(function AccordionButton2(props, ref) {\n  const { getButtonProps } = useAccordionItemContext();\n  const buttonProps = getButtonProps(props, ref);\n  const styles = useAccordionStyles();\n  const buttonStyles = {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    outline: 0,\n    ...styles.button\n  };\n  return /* @__PURE__ */ React.createElement(chakra.button, {\n    ...buttonProps,\n    className: cx(\"chakra-accordion__button\", props.className),\n    __css: buttonStyles\n  });\n});\nAccordionButton.displayName = \"AccordionButton\";\n\n// src/accordion-icon.tsx\nimport { Icon } from \"@chakra-ui/icon\";\n\n// src/use-accordion.ts\nimport { createContext as createContext2 } from \"@chakra-ui/react-context\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport { useCallback, useEffect, useId, useRef, useState } from \"react\";\nfunction useAccordion(props) {\n  const {\n    onChange,\n    defaultIndex,\n    index: indexProp,\n    allowMultiple,\n    allowToggle,\n    ...htmlProps\n  } = props;\n  allowMultipleWarning(props);\n  allowMultipleAndAllowToggleWarning(props);\n  const descendants = useAccordionDescendants();\n  const [focusedIndex, setFocusedIndex] = useState(-1);\n  useEffect(() => {\n    return () => {\n      setFocusedIndex(-1);\n    };\n  }, []);\n  const [index, setIndex] = useControllableState({\n    value: indexProp,\n    defaultValue() {\n      if (allowMultiple)\n        return defaultIndex ?? [];\n      return defaultIndex ?? -1;\n    },\n    onChange\n  });\n  const getAccordionItemProps = (idx) => {\n    let isOpen = false;\n    if (idx !== null) {\n      isOpen = Array.isArray(index) ? index.includes(idx) : index === idx;\n    }\n    const onChange2 = (isOpen2) => {\n      if (idx === null)\n        return;\n      if (allowMultiple && Array.isArray(index)) {\n        const nextState = isOpen2 ? index.concat(idx) : index.filter((i) => i !== idx);\n        setIndex(nextState);\n      } else if (isOpen2) {\n        setIndex(idx);\n      } else if (allowToggle) {\n        setIndex(-1);\n      }\n    };\n    return { isOpen, onChange: onChange2 };\n  };\n  return {\n    index,\n    setIndex,\n    htmlProps,\n    getAccordionItemProps,\n    focusedIndex,\n    setFocusedIndex,\n    descendants\n  };\n}\nvar [AccordionProvider, useAccordionContext] = createContext2({\n  name: \"AccordionContext\",\n  hookName: \"useAccordionContext\",\n  providerName: \"Accordion\"\n});\nfunction useAccordionItem(props) {\n  const { isDisabled, isFocusable, id, ...htmlProps } = props;\n  const { getAccordionItemProps, setFocusedIndex } = useAccordionContext();\n  const buttonRef = useRef(null);\n  const reactId = useId();\n  const uid = id ?? reactId;\n  const buttonId = `accordion-button-${uid}`;\n  const panelId = `accordion-panel-${uid}`;\n  focusableNotDisabledWarning(props);\n  const { register, index, descendants } = useAccordionDescendant({\n    disabled: isDisabled && !isFocusable\n  });\n  const { isOpen, onChange } = getAccordionItemProps(index === -1 ? null : index);\n  warnIfOpenAndDisabled({ isOpen, isDisabled });\n  const onOpen = () => {\n    onChange == null ? void 0 : onChange(true);\n  };\n  const onClose = () => {\n    onChange == null ? void 0 : onChange(false);\n  };\n  const onClick = useCallback(() => {\n    onChange == null ? void 0 : onChange(!isOpen);\n    setFocusedIndex(index);\n  }, [index, setFocusedIndex, isOpen, onChange]);\n  const onKeyDown = useCallback((event) => {\n    const keyMap = {\n      ArrowDown: () => {\n        const next = descendants.nextEnabled(index);\n        next == null ? void 0 : next.node.focus();\n      },\n      ArrowUp: () => {\n        const prev = descendants.prevEnabled(index);\n        prev == null ? void 0 : prev.node.focus();\n      },\n      Home: () => {\n        const first = descendants.firstEnabled();\n        first == null ? void 0 : first.node.focus();\n      },\n      End: () => {\n        const last = descendants.lastEnabled();\n        last == null ? void 0 : last.node.focus();\n      }\n    };\n    const action = keyMap[event.key];\n    if (action) {\n      event.preventDefault();\n      action(event);\n    }\n  }, [descendants, index]);\n  const onFocus = useCallback(() => {\n    setFocusedIndex(index);\n  }, [setFocusedIndex, index]);\n  const getButtonProps = useCallback(function getButtonProps2(props2 = {}, ref = null) {\n    return {\n      ...props2,\n      type: \"button\",\n      ref: mergeRefs(register, buttonRef, ref),\n      id: buttonId,\n      disabled: !!isDisabled,\n      \"aria-expanded\": !!isOpen,\n      \"aria-controls\": panelId,\n      onClick: callAllHandlers(props2.onClick, onClick),\n      onFocus: callAllHandlers(props2.onFocus, onFocus),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown)\n    };\n  }, [\n    buttonId,\n    isDisabled,\n    isOpen,\n    onClick,\n    onFocus,\n    onKeyDown,\n    panelId,\n    register\n  ]);\n  const getPanelProps = useCallback(function getPanelProps2(props2 = {}, ref = null) {\n    return {\n      ...props2,\n      ref,\n      role: \"region\",\n      id: panelId,\n      \"aria-labelledby\": buttonId,\n      hidden: !isOpen\n    };\n  }, [buttonId, isOpen, panelId]);\n  return {\n    isOpen,\n    isDisabled,\n    isFocusable,\n    onOpen,\n    onClose,\n    getButtonProps,\n    getPanelProps,\n    htmlProps\n  };\n}\nfunction allowMultipleWarning(props) {\n  const index = props.index || props.defaultIndex;\n  const condition = index == null && !Array.isArray(index) && props.allowMultiple;\n  warn({\n    condition: !!condition,\n    message: `If 'allowMultiple' is passed, then 'index' or 'defaultIndex' must be an array. You passed: ${typeof index},`\n  });\n}\nfunction allowMultipleAndAllowToggleWarning(props) {\n  warn({\n    condition: !!(props.allowMultiple && props.allowToggle),\n    message: `If 'allowMultiple' is passed, 'allowToggle' will be ignored. Either remove 'allowToggle' or 'allowMultiple' depending on whether you want multiple accordions visible or not`\n  });\n}\nfunction focusableNotDisabledWarning(props) {\n  warn({\n    condition: !!(props.isFocusable && !props.isDisabled),\n    message: `Using only 'isFocusable', this prop is reserved for situations where you pass 'isDisabled' but you still want the element to receive focus (A11y). Either remove it or pass 'isDisabled' as well.\n    `\n  });\n}\nfunction warnIfOpenAndDisabled(props) {\n  warn({\n    condition: props.isOpen && !!props.isDisabled,\n    message: \"Cannot open a disabled accordion item\"\n  });\n}\n\n// src/accordion-icon.tsx\nfunction AccordionIcon(props) {\n  const { isOpen, isDisabled } = useAccordionItemContext();\n  const { reduceMotion } = useAccordionContext();\n  const _className = cx(\"chakra-accordion__icon\", props.className);\n  const styles = useAccordionStyles();\n  const iconStyles = {\n    opacity: isDisabled ? 0.4 : 1,\n    transform: isOpen ? \"rotate(-180deg)\" : void 0,\n    transition: reduceMotion ? void 0 : \"transform 0.2s\",\n    transformOrigin: \"center\",\n    ...styles.icon\n  };\n  return /* @__PURE__ */ React.createElement(Icon, {\n    viewBox: \"0 0 24 24\",\n    \"aria-hidden\": true,\n    className: _className,\n    __css: iconStyles,\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n  }));\n}\nAccordionIcon.displayName = \"AccordionIcon\";\n\n// src/accordion-item.tsx\nimport {\n  chakra as chakra2,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nvar AccordionItem = forwardRef2(function AccordionItem2(props, ref) {\n  const { children, className } = props;\n  const { htmlProps, ...context } = useAccordionItem(props);\n  const styles = useAccordionStyles();\n  const containerStyles = {\n    ...styles.container,\n    overflowAnchor: \"none\"\n  };\n  const ctx = useMemo(() => context, [context]);\n  return /* @__PURE__ */ React.createElement(AccordionItemProvider, {\n    value: ctx\n  }, /* @__PURE__ */ React.createElement(chakra2.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion__item\", className),\n    __css: containerStyles\n  }, typeof children === \"function\" ? children({\n    isExpanded: !!context.isOpen,\n    isDisabled: !!context.isDisabled\n  }) : children));\n});\nAccordionItem.displayName = \"AccordionItem\";\n\n// src/accordion-panel.tsx\nimport { chakra as chakra3, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { Collapse } from \"@chakra-ui/transition\";\nvar AccordionPanel = forwardRef3(function AccordionPanel2(props, ref) {\n  const { reduceMotion } = useAccordionContext();\n  const { getPanelProps, isOpen } = useAccordionItemContext();\n  const panelProps = getPanelProps(props, ref);\n  const _className = cx(\"chakra-accordion__panel\", props.className);\n  const styles = useAccordionStyles();\n  if (!reduceMotion) {\n    delete panelProps.hidden;\n  }\n  const child = /* @__PURE__ */ React.createElement(chakra3.div, {\n    ...panelProps,\n    __css: styles.panel,\n    className: _className\n  });\n  if (!reduceMotion) {\n    return /* @__PURE__ */ React.createElement(Collapse, {\n      in: isOpen\n    }, child);\n  }\n  return child;\n});\nAccordionPanel.displayName = \"AccordionPanel\";\n\n// src/accordion.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef4,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo2 } from \"react\";\nvar Accordion = forwardRef4(function Accordion2({ children, reduceMotion, ...props }, ref) {\n  const styles = useMultiStyleConfig(\"Accordion\", props);\n  const ownProps = omitThemingProps(props);\n  const { htmlProps, descendants, ...context } = useAccordion(ownProps);\n  const ctx = useMemo2(() => ({ ...context, reduceMotion: !!reduceMotion }), [context, reduceMotion]);\n  return /* @__PURE__ */ React.createElement(AccordionDescendantsProvider, {\n    value: descendants\n  }, /* @__PURE__ */ React.createElement(AccordionProvider, {\n    value: ctx\n  }, /* @__PURE__ */ React.createElement(AccordionStylesProvider, {\n    value: styles\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    ...htmlProps,\n    className: cx(\"chakra-accordion\", props.className),\n    __css: styles.root\n  }, children))));\n});\nAccordion.displayName = \"Accordion\";\n\n// src/use-accordiont-item-state.ts\nfunction useAccordionItemState() {\n  const { isOpen, isDisabled, onClose, onOpen } = useAccordionItemContext();\n  return { isOpen, onClose, isDisabled, onOpen };\n}\nexport {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  AccordionProvider,\n  useAccordion,\n  useAccordionContext,\n  useAccordionItem,\n  useAccordionItemState,\n  useAccordionStyles\n};\n"]},"metadata":{},"sourceType":"module"}