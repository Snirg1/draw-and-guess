{"ast":null,"code":"// src/use-pan-event.ts\nimport { addPointerEvent as addPointerEvent2 } from \"@chakra-ui/event-utils\";\nimport { useEffect, useRef } from \"react\"; // src/pan-event.ts\n\nimport { addPointerEvent, getEventPoint, isMultiTouchEvent } from \"@chakra-ui/event-utils\";\nimport sync, { cancelSync, getFrameData } from \"framesync\";\nvar PanEvent = class {\n  history = [];\n  startEvent = null;\n  lastEvent = null;\n  lastEventInfo = null;\n  handlers = {};\n  removeListeners = () => {};\n  threshold = 3;\n  win;\n\n  constructor(event, handlers, threshold) {\n    this.win = event.view ?? window;\n    if (isMultiTouchEvent(event)) return;\n    this.handlers = handlers;\n\n    if (threshold) {\n      this.threshold = threshold;\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n    const info = {\n      point: getEventPoint(event)\n    };\n    const {\n      timestamp\n    } = getFrameData();\n    this.history = [{ ...info.point,\n      timestamp\n    }];\n    const {\n      onSessionStart\n    } = handlers;\n    onSessionStart == null ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n\n  updatePoint = () => {\n    if (!(this.lastEvent && this.lastEventInfo)) return;\n    const info = getPanInfo(this.lastEventInfo, this.history);\n    const isPanStarted = this.startEvent !== null;\n    const isDistancePastThreshold = distance(info.offset, {\n      x: 0,\n      y: 0\n    }) >= this.threshold;\n    if (!isPanStarted && !isDistancePastThreshold) return;\n    const {\n      timestamp\n    } = getFrameData();\n    this.history.push({ ...info.point,\n      timestamp\n    });\n    const {\n      onStart,\n      onMove\n    } = this.handlers;\n\n    if (!isPanStarted) {\n      onStart == null ? void 0 : onStart(this.lastEvent, info);\n      this.startEvent = this.lastEvent;\n    }\n\n    onMove == null ? void 0 : onMove(this.lastEvent, info);\n  };\n  onPointerMove = (event, info) => {\n    this.lastEvent = event;\n    this.lastEventInfo = info;\n    sync.update(this.updatePoint, true);\n  };\n  onPointerUp = (event, info) => {\n    const panInfo = getPanInfo(info, this.history);\n    const {\n      onEnd,\n      onSessionEnd\n    } = this.handlers;\n    onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n    this.end();\n    if (!onEnd || !this.startEvent) return;\n    onEnd == null ? void 0 : onEnd(event, panInfo);\n  };\n\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n\n  end() {\n    var _a;\n\n    (_a = this.removeListeners) == null ? void 0 : _a.call(this);\n    cancelSync.update(this.updatePoint);\n  }\n\n};\n\nfunction subtract(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nvar toMilliseconds = v => v * 1e3;\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = history[history.length - 1];\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nfunction pipe() {\n  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {\n    fns[_key] = arguments[_key];\n  }\n\n  return v => fns.reduce((a, b) => b(a), v);\n}\n\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\n\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\n\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x);\n    const yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n  }\n\n  return 0;\n} // src/use-pan-event.ts\n\n\nfunction usePanEvent(ref, options) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = options;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = useRef(null);\n  const handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n\n  };\n  useEffect(() => {\n    var _a;\n\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlers);\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanEvent(event, handlers, threshold);\n  }\n\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || !hasPanEvents) return;\n    return addPointerEvent2(node, \"pointerdown\", onPointerDown);\n  }, [hasPanEvents]);\n  useEffect(() => {\n    return () => {\n      var _a;\n\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\n\nexport { usePanEvent };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/react-use-pan-event/dist/index.esm.js"],"names":["addPointerEvent","addPointerEvent2","useEffect","useRef","getEventPoint","isMultiTouchEvent","sync","cancelSync","getFrameData","PanEvent","history","startEvent","lastEvent","lastEventInfo","handlers","removeListeners","threshold","win","constructor","event","view","window","stopPropagation","preventDefault","info","point","timestamp","onSessionStart","getPanInfo","pipe","onPointerMove","onPointerUp","updatePoint","isPanStarted","isDistancePastThreshold","distance","offset","x","y","push","onStart","onMove","update","panInfo","onEnd","onSessionEnd","end","updateHandlers","_a","call","subtract","a","b","delta","length","velocity","getVelocity","toMilliseconds","v","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity","fns","reduce","distance1D","Math","abs","isPoint","xDelta","yDelta","sqrt","usePanEvent","ref","options","onPan","onPanStart","onPanEnd","onPanSessionStart","onPanSessionEnd","hasPanEvents","Boolean","panSession","current","onPointerDown","node"],"mappings":"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","sourcesContent":["// src/use-pan-event.ts\nimport { addPointerEvent as addPointerEvent2 } from \"@chakra-ui/event-utils\";\nimport { useEffect, useRef } from \"react\";\n\n// src/pan-event.ts\nimport {\n  addPointerEvent,\n  getEventPoint,\n  isMultiTouchEvent\n} from \"@chakra-ui/event-utils\";\nimport sync, { cancelSync, getFrameData } from \"framesync\";\nvar PanEvent = class {\n  history = [];\n  startEvent = null;\n  lastEvent = null;\n  lastEventInfo = null;\n  handlers = {};\n  removeListeners = () => {\n  };\n  threshold = 3;\n  win;\n  constructor(event, handlers, threshold) {\n    this.win = event.view ?? window;\n    if (isMultiTouchEvent(event))\n      return;\n    this.handlers = handlers;\n    if (threshold) {\n      this.threshold = threshold;\n    }\n    event.stopPropagation();\n    event.preventDefault();\n    const info = { point: getEventPoint(event) };\n    const { timestamp } = getFrameData();\n    this.history = [{ ...info.point, timestamp }];\n    const { onSessionStart } = handlers;\n    onSessionStart == null ? void 0 : onSessionStart(event, getPanInfo(info, this.history));\n    this.removeListeners = pipe(addPointerEvent(this.win, \"pointermove\", this.onPointerMove), addPointerEvent(this.win, \"pointerup\", this.onPointerUp), addPointerEvent(this.win, \"pointercancel\", this.onPointerUp));\n  }\n  updatePoint = () => {\n    if (!(this.lastEvent && this.lastEventInfo))\n      return;\n    const info = getPanInfo(this.lastEventInfo, this.history);\n    const isPanStarted = this.startEvent !== null;\n    const isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= this.threshold;\n    if (!isPanStarted && !isDistancePastThreshold)\n      return;\n    const { timestamp } = getFrameData();\n    this.history.push({ ...info.point, timestamp });\n    const { onStart, onMove } = this.handlers;\n    if (!isPanStarted) {\n      onStart == null ? void 0 : onStart(this.lastEvent, info);\n      this.startEvent = this.lastEvent;\n    }\n    onMove == null ? void 0 : onMove(this.lastEvent, info);\n  };\n  onPointerMove = (event, info) => {\n    this.lastEvent = event;\n    this.lastEventInfo = info;\n    sync.update(this.updatePoint, true);\n  };\n  onPointerUp = (event, info) => {\n    const panInfo = getPanInfo(info, this.history);\n    const { onEnd, onSessionEnd } = this.handlers;\n    onSessionEnd == null ? void 0 : onSessionEnd(event, panInfo);\n    this.end();\n    if (!onEnd || !this.startEvent)\n      return;\n    onEnd == null ? void 0 : onEnd(event, panInfo);\n  };\n  updateHandlers(handlers) {\n    this.handlers = handlers;\n  }\n  end() {\n    var _a;\n    (_a = this.removeListeners) == null ? void 0 : _a.call(this);\n    cancelSync.update(this.updatePoint);\n  }\n};\nfunction subtract(a, b) {\n  return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo(info, history) {\n  return {\n    point: info.point,\n    delta: subtract(info.point, history[history.length - 1]),\n    offset: subtract(info.point, history[0]),\n    velocity: getVelocity(history, 0.1)\n  };\n}\nvar toMilliseconds = (v) => v * 1e3;\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return { x: 0, y: 0 };\n  }\n  let i = history.length - 1;\n  let timestampedPoint = null;\n  const lastPoint = history[history.length - 1];\n  while (i >= 0) {\n    timestampedPoint = history[i];\n    if (lastPoint.timestamp - timestampedPoint.timestamp > toMilliseconds(timeDelta)) {\n      break;\n    }\n    i--;\n  }\n  if (!timestampedPoint) {\n    return { x: 0, y: 0 };\n  }\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1e3;\n  if (time === 0) {\n    return { x: 0, y: 0 };\n  }\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n  return currentVelocity;\n}\nfunction pipe(...fns) {\n  return (v) => fns.reduce((a, b) => b(a), v);\n}\nfunction distance1D(a, b) {\n  return Math.abs(a - b);\n}\nfunction isPoint(point) {\n  return \"x\" in point && \"y\" in point;\n}\nfunction distance(a, b) {\n  if (typeof a === \"number\" && typeof b === \"number\") {\n    return distance1D(a, b);\n  }\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x);\n    const yDelta = distance1D(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n  }\n  return 0;\n}\n\n// src/use-pan-event.ts\nfunction usePanEvent(ref, options) {\n  const {\n    onPan,\n    onPanStart,\n    onPanEnd,\n    onPanSessionStart,\n    onPanSessionEnd,\n    threshold\n  } = options;\n  const hasPanEvents = Boolean(onPan || onPanStart || onPanEnd || onPanSessionStart || onPanSessionEnd);\n  const panSession = useRef(null);\n  const handlers = {\n    onSessionStart: onPanSessionStart,\n    onSessionEnd: onPanSessionEnd,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd(event, info) {\n      panSession.current = null;\n      onPanEnd == null ? void 0 : onPanEnd(event, info);\n    }\n  };\n  useEffect(() => {\n    var _a;\n    (_a = panSession.current) == null ? void 0 : _a.updateHandlers(handlers);\n  });\n  function onPointerDown(event) {\n    panSession.current = new PanEvent(event, handlers, threshold);\n  }\n  useEffect(() => {\n    const node = ref.current;\n    if (!node || !hasPanEvents)\n      return;\n    return addPointerEvent2(node, \"pointerdown\", onPointerDown);\n  }, [hasPanEvents]);\n  useEffect(() => {\n    return () => {\n      var _a;\n      (_a = panSession.current) == null ? void 0 : _a.end();\n      panSession.current = null;\n    };\n  }, []);\n}\nexport {\n  usePanEvent\n};\n"]},"metadata":{},"sourceType":"module"}