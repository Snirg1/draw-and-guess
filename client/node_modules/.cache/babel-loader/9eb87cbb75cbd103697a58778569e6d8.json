{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/checkbox-group.tsx\n\nimport { useMemo } from \"react\"; // src/checkbox-context.ts\n\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}); // src/use-checkbox-group.ts\n\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\"; // ../../utilities/shared-utils/dist/index.esm.js\n\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\n\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\nvar dataAttr = condition => condition ? \"\" : void 0;\n\nfunction callAllHandlers() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function func(event) {\n    fns.some(fn => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\n\nfunction callAll() {\n  for (var _len3 = arguments.length, fns = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    fns[_key3] = arguments[_key3];\n  }\n\n  return function mergedFn(arg) {\n    fns.forEach(fn => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n} // src/use-checkbox-group.ts\n\n\nimport { useCallback } from \"react\";\n\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\n\nfunction useCheckboxGroup() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback(eventOrValue => {\n    if (!value) return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter(v => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return { ...props2,\n      [checkedKey]: value.some(val => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n} // src/checkbox-group.tsx\n\n\nfunction CheckboxGroup(props) {\n  const {\n    colorScheme,\n    size,\n    variant,\n    children,\n    isDisabled\n  } = props;\n  const {\n    value,\n    onChange\n  } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\n\nCheckboxGroup.displayName = \"CheckboxGroup\"; // src/checkbox-icon.tsx\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { AnimatePresence, motion } from \"framer-motion\";\n\nfunction __motion(el) {\n  const m = motion;\n\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n\n  return m(el);\n}\n\nvar MotionSvg = __motion(chakra.svg);\n\nfunction CheckIcon(props) {\n  return /* @__PURE__ */React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\n\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    },\n    ...props\n  }, /* @__PURE__ */React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\n\nfunction CheckboxTransition(_ref) {\n  let {\n    open,\n    children\n  } = _ref;\n  return /* @__PURE__ */React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /* @__PURE__ */React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n}\n\nfunction CheckboxIcon(props) {\n  const {\n    isIndeterminate,\n    isChecked,\n    ...rest\n  } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /* @__PURE__ */React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /* @__PURE__ */React.createElement(BaseIcon, { ...rest\n  }));\n} // src/checkbox.tsx\n\n\nimport { chakra as chakra2, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\"; // src/use-checkbox.ts\n\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\"; // ../../utilities/object-utils/dist/index.esm.js\n\nfunction omit(object) {\n  let keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const clone = Object.assign({}, object);\n\n  for (const key of keysToOmit) {\n    if (key in clone) delete clone[key];\n  }\n\n  return clone;\n} // src/use-checkbox.ts\n\n\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\n\nfunction useCheckbox() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2(event => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form)) return;\n\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2(event => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2(event => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current) return;\n    const notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    const onPressDown = event => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n\n      setActive(true);\n    };\n\n    return { ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [isActive, isChecked, isDisabled, isFocused, isFocusVisible, isHovered, isIndeterminate, isInvalid, isReadOnly]);\n  const getRootProps = useCallback2(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...htmlProps,\n      ...props2,\n      ref: mergeRefs(forwardedRef, node => {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props2.onClick, () => {\n        var _a;\n\n        if (!rootIsLabelElement) {\n          (_a = inputRef.current) == null ? void 0 : _a.click();\n          requestAnimationFrame(() => {\n            var _a2;\n\n            (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    };\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [name, value, id, handleChange, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  const getLabelProps = useCallback2(function () {\n    let props2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let forwardedRef = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return { ...props2,\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    };\n  }, [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n} // src/checkbox.tsx\n\n\nvar CheckboxControl = chakra2(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar CheckboxRoot = chakra2(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group,\n    ...props\n  };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  let onChange = onChangeProp;\n\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({ ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n    transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */React.createElement(CheckboxRoot, {\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */React.createElement(CheckboxControl, {\n    __css: styles.control,\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport { Checkbox, CheckboxGroup, CheckboxIcon, useCheckbox, useCheckboxGroup };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/checkbox/dist/index.esm.js"],"names":["React","useMemo","createContext","CheckboxGroupProvider","useCheckboxGroupContext","name","strict","useCallbackRef","useControllableState","cx","classNames","filter","Boolean","join","isObject","value","type","Array","isArray","dataAttr","condition","callAllHandlers","fns","func","event","some","fn","defaultPrevented","callAll","mergedFn","arg","forEach","useCallback","isInputEvent","target","useCheckboxGroup","props","defaultValue","valueProp","onChange","isDisabled","isNative","onChangeProp","setValue","handleChange","eventOrValue","isChecked","checked","includes","selectedValue","nextValue","v","String","getCheckboxProps","props2","checkedKey","val","CheckboxGroup","colorScheme","size","variant","children","group","createElement","displayName","chakra","AnimatePresence","motion","__motion","el","m","custom","MotionSvg","svg","CheckIcon","width","viewBox","variants","unchecked","opacity","strokeDashoffset","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","open","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","rest","BaseIcon","chakra2","forwardRef","omitThemingProps","useMultiStyleConfig","cloneElement","useMemo2","useFormControlProps","useSafeLayoutEffect","useUpdateEffect","useCallbackRef2","mergeRefs","omit","object","keysToOmit","clone","Object","assign","key","visuallyHiddenStyle","trackFocusVisible","useCallback2","useEffect","useRef","useState","useCheckbox","formControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultChecked","checkedProp","isFocusable","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","onBlurProp","onFocusProp","isFocusVisible","setIsFocusVisible","isFocused","setFocused","isHovered","setHovered","isActive","setActive","inputRef","rootIsLabelElement","setRootIsLabelElement","checkedState","setCheckedState","isControlled","preventDefault","current","indeterminate","form","onreset","trulyDisabled","onKeyDown","onKeyUp","notInSync","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","node","tagName","onClick","_a","click","requestAnimationFrame","_a2","focus","getInputProps","required","disabled","readOnly","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","CheckboxRoot","cursor","position","Checkbox","Checkbox2","mergedProps","styles","ownProps","spacing","className","iconColor","iconSize","icon","isCheckedProp","inputProps","iconStyles","transform","fontSize","color","clonedIcon","__css","container","control","span","marginStart","label"],"mappings":"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","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/checkbox-group.tsx\nimport { useMemo } from \"react\";\n\n// src/checkbox-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\n// src/use-checkbox-group.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@chakra-ui/react-use-controllable-state\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\nvar dataAttr = (condition) => condition ? \"\" : void 0;\nfunction callAllHandlers(...fns) {\n  return function func(event) {\n    fns.some((fn) => {\n      fn == null ? void 0 : fn(event);\n      return event == null ? void 0 : event.defaultPrevented;\n    });\n  };\n}\nfunction callAll(...fns) {\n  return function mergedFn(arg) {\n    fns.forEach((fn) => {\n      fn == null ? void 0 : fn(arg);\n    });\n  };\n}\n\n// src/use-checkbox-group.ts\nimport { useCallback } from \"react\";\nfunction isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n}\nfunction useCheckboxGroup(props = {}) {\n  const {\n    defaultValue,\n    value: valueProp,\n    onChange,\n    isDisabled,\n    isNative\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [value, setValue] = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  });\n  const handleChange = useCallback((eventOrValue) => {\n    if (!value)\n      return;\n    const isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    const selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    const nextValue = isChecked ? [...value, selectedValue] : value.filter((v) => String(v) !== String(selectedValue));\n    setValue(nextValue);\n  }, [setValue, value]);\n  const getCheckboxProps = useCallback((props2 = {}) => {\n    const checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return {\n      ...props2,\n      [checkedKey]: value.some((val) => String(props2.value) === String(val)),\n      onChange: handleChange\n    };\n  }, [handleChange, isNative, value]);\n  return {\n    value,\n    isDisabled,\n    onChange: handleChange,\n    setValue,\n    getCheckboxProps\n  };\n}\n\n// src/checkbox-group.tsx\nfunction CheckboxGroup(props) {\n  const { colorScheme, size, variant, children, isDisabled } = props;\n  const { value, onChange } = useCheckboxGroup(props);\n  const group = useMemo(() => ({\n    size,\n    onChange,\n    colorScheme,\n    value,\n    variant,\n    isDisabled\n  }), [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /* @__PURE__ */ React.createElement(CheckboxGroupProvider, {\n    value: group,\n    children\n  });\n}\nCheckboxGroup.displayName = \"CheckboxGroup\";\n\n// src/checkbox-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nfunction __motion(el) {\n  const m = motion;\n  if (\"custom\" in m && typeof m.custom === \"function\") {\n    return m.custom(el);\n  }\n  return m(el);\n}\nvar MotionSvg = __motion(chakra.svg);\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: { duration: 0.2 }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ React.createElement(MotionSvg, {\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: { duration: 0 },\n          opacity: { duration: 0.02 }\n        }\n      }\n    },\n    style: { stroke: \"currentColor\", strokeWidth: 4 },\n    ...props\n  }, /* @__PURE__ */ React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n}\nfunction CheckboxTransition({ open, children }) {\n  return /* @__PURE__ */ React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /* @__PURE__ */ React.createElement(motion.div, {\n    variants: {\n      unchecked: { scale: 0.5 },\n      checked: { scale: 1 }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /* @__PURE__ */ React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /* @__PURE__ */ React.createElement(BaseIcon, {\n    ...rest\n  }));\n}\n\n// src/checkbox.tsx\nimport {\n  chakra as chakra2,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cloneElement, useMemo as useMemo2 } from \"react\";\n\n// src/use-checkbox.ts\nimport { useFormControlProps } from \"@chakra-ui/form-control\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useUpdateEffect } from \"@chakra-ui/react-use-update-effect\";\nimport { useCallbackRef as useCallbackRef2 } from \"@chakra-ui/react-use-callback-ref\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\n\n// ../../utilities/object-utils/dist/index.esm.js\nfunction omit(object, keysToOmit = []) {\n  const clone = Object.assign({}, object);\n  for (const key of keysToOmit) {\n    if (key in clone)\n      delete clone[key];\n  }\n  return clone;\n}\n\n// src/use-checkbox.ts\nimport { visuallyHiddenStyle } from \"@chakra-ui/visually-hidden\";\nimport { trackFocusVisible } from \"@zag-js/focus-visible\";\nimport { useCallback as useCallback2, useEffect, useRef, useState } from \"react\";\nfunction useCheckbox(props = {}) {\n  const formControlProps = useFormControlProps(props);\n  const {\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n    id,\n    onBlur,\n    onFocus,\n    \"aria-describedby\": ariaDescribedBy\n  } = formControlProps;\n  const {\n    defaultChecked,\n    isChecked: checkedProp,\n    isFocusable,\n    onChange,\n    isIndeterminate,\n    name,\n    value,\n    tabIndex = void 0,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-invalid\": ariaInvalid,\n    ...rest\n  } = props;\n  const htmlProps = omit(rest, [\n    \"isDisabled\",\n    \"isReadOnly\",\n    \"isRequired\",\n    \"isInvalid\",\n    \"id\",\n    \"onBlur\",\n    \"onFocus\",\n    \"aria-describedby\"\n  ]);\n  const onChangeProp = useCallbackRef2(onChange);\n  const onBlurProp = useCallbackRef2(onBlur);\n  const onFocusProp = useCallbackRef2(onFocus);\n  const [isFocusVisible, setIsFocusVisible] = useState(false);\n  const [isFocused, setFocused] = useState(false);\n  const [isHovered, setHovered] = useState(false);\n  const [isActive, setActive] = useState(false);\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible);\n  }, []);\n  const inputRef = useRef(null);\n  const [rootIsLabelElement, setRootIsLabelElement] = useState(true);\n  const [checkedState, setCheckedState] = useState(!!defaultChecked);\n  const isControlled = checkedProp !== void 0;\n  const isChecked = isControlled ? checkedProp : checkedState;\n  const handleChange = useCallback2((event) => {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [\n    isReadOnly,\n    isDisabled,\n    isChecked,\n    isControlled,\n    isIndeterminate,\n    onChangeProp\n  ]);\n  useSafeLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(() => {\n    if (isDisabled) {\n      setFocused(false);\n    }\n  }, [isDisabled, setFocused]);\n  useSafeLayoutEffect(() => {\n    const el = inputRef.current;\n    if (!(el == null ? void 0 : el.form))\n      return;\n    el.form.onreset = () => {\n      setCheckedState(!!defaultChecked);\n    };\n  }, []);\n  const trulyDisabled = isDisabled && !isFocusable;\n  const onKeyDown = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(true);\n    }\n  }, [setActive]);\n  const onKeyUp = useCallback2((event) => {\n    if (event.key === \" \") {\n      setActive(false);\n    }\n  }, [setActive]);\n  useSafeLayoutEffect(() => {\n    if (!inputRef.current)\n      return;\n    const notInSync = inputRef.current.checked !== isChecked;\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  const getCheckboxProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    const onPressDown = (event) => {\n      if (isFocused) {\n        event.preventDefault();\n      }\n      setActive(true);\n    };\n    return {\n      ...props2,\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-focus-visible\": dataAttr(isFocused && isFocusVisible),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props2.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props2.onMouseUp, () => setActive(false)),\n      onMouseEnter: callAllHandlers(props2.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: callAllHandlers(props2.onMouseLeave, () => setHovered(false))\n    };\n  }, [\n    isActive,\n    isChecked,\n    isDisabled,\n    isFocused,\n    isFocusVisible,\n    isHovered,\n    isIndeterminate,\n    isInvalid,\n    isReadOnly\n  ]);\n  const getRootProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...htmlProps,\n    ...props2,\n    ref: mergeRefs(forwardedRef, (node) => {\n      if (!node)\n        return;\n      setRootIsLabelElement(node.tagName === \"LABEL\");\n    }),\n    onClick: callAllHandlers(props2.onClick, () => {\n      var _a;\n      if (!rootIsLabelElement) {\n        (_a = inputRef.current) == null ? void 0 : _a.click();\n        requestAnimationFrame(() => {\n          var _a2;\n          (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n        });\n      }\n    }),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  const getInputProps = useCallback2((props2 = {}, forwardedRef = null) => {\n    return {\n      ...props2,\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name,\n      value,\n      id,\n      tabIndex,\n      onChange: callAllHandlers(props2.onChange, handleChange),\n      onBlur: callAllHandlers(props2.onBlur, onBlurProp, () => setFocused(false)),\n      onFocus: callAllHandlers(props2.onFocus, onFocusProp, () => setFocused(true)),\n      onKeyDown: callAllHandlers(props2.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props2.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    };\n  }, [\n    name,\n    value,\n    id,\n    handleChange,\n    onBlurProp,\n    onFocusProp,\n    onKeyDown,\n    onKeyUp,\n    isRequired,\n    isChecked,\n    trulyDisabled,\n    isReadOnly,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaInvalid,\n    isInvalid,\n    ariaDescribedBy,\n    isDisabled,\n    tabIndex\n  ]);\n  const getLabelProps = useCallback2((props2 = {}, forwardedRef = null) => ({\n    ...props2,\n    ref: forwardedRef,\n    onMouseDown: callAllHandlers(props2.onMouseDown, stopEvent),\n    onTouchStart: callAllHandlers(props2.onTouchStart, stopEvent),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-checked\": dataAttr(isChecked),\n    \"data-invalid\": dataAttr(isInvalid)\n  }), [isChecked, isDisabled, isInvalid]);\n  const state = {\n    isInvalid,\n    isFocused,\n    isChecked,\n    isActive,\n    isHovered,\n    isIndeterminate,\n    isDisabled,\n    isReadOnly,\n    isRequired\n  };\n  return {\n    state,\n    getRootProps,\n    getCheckboxProps,\n    getInputProps,\n    getLabelProps,\n    htmlProps\n  };\n}\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\n// src/checkbox.tsx\nvar CheckboxControl = chakra2(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar CheckboxRoot = chakra2(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\"\n  }\n});\nvar Checkbox = forwardRef(function Checkbox2(props, ref) {\n  const group = useCheckboxGroupContext();\n  const mergedProps = { ...group, ...props };\n  const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  const ownProps = omitThemingProps(props);\n  const {\n    spacing = \"0.5rem\",\n    className,\n    children,\n    iconColor,\n    iconSize,\n    icon = /* @__PURE__ */ React.createElement(CheckboxIcon, null),\n    isChecked: isCheckedProp,\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    onChange: onChangeProp,\n    inputProps,\n    ...rest\n  } = ownProps;\n  let isChecked = isCheckedProp;\n  if ((group == null ? void 0 : group.value) && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n  let onChange = onChangeProp;\n  if ((group == null ? void 0 : group.onChange) && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getLabelProps,\n    getRootProps\n  } = useCheckbox({\n    ...rest,\n    isDisabled,\n    isChecked,\n    onChange\n  });\n  const iconStyles = useMemo2(() => ({\n    opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n    transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n    fontSize: iconSize,\n    color: iconColor,\n    ...styles.icon\n  }), [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  const clonedIcon = cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /* @__PURE__ */ React.createElement(CheckboxRoot, {\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className),\n    ...getRootProps()\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-checkbox__input\",\n    ...getInputProps(inputProps, ref)\n  }), /* @__PURE__ */ React.createElement(CheckboxControl, {\n    __css: styles.control,\n    className: \"chakra-checkbox__control\",\n    ...getCheckboxProps()\n  }, clonedIcon), children && /* @__PURE__ */ React.createElement(chakra2.span, {\n    className: \"chakra-checkbox__label\",\n    ...getLabelProps(),\n    __css: {\n      marginStart: spacing,\n      ...styles.label\n    }\n  }, children));\n});\nCheckbox.displayName = \"Checkbox\";\nexport {\n  Checkbox,\n  CheckboxGroup,\n  CheckboxIcon,\n  useCheckbox,\n  useCheckboxGroup\n};\n"]},"metadata":{},"sourceType":"module"}