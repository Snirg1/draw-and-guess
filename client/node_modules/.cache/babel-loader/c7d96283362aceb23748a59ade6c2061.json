{"ast":null,"code":"var _jsxFileName = \"/Users/Snirgu1/Desktop/draw-and-guess/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Container, Input, Button, Box, Heading } from \"@chakra-ui/react\";\nimport SketchCanvas from \"./components/SketchCanvas\";\nimport { SERVER_IP } from \"./constants.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [isWordWasSet, setIsWordWasSet] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [currentDrawer, setCurrentDrawer] = useState(0);\n  const [wordToDraw, setWordToDraw] = useState(null);\n  const [wordToGuess, setWordToGuess] = useState(null);\n  const [playerID, setPlayerID] = useState(null);\n  const [wordLevel, setWordLevel] = useState(null);\n  const [img64BaseSrc, setImg64BaseSrc] = useState(null);\n  const [sessionPoints, setSessionPoints] = useState(0);\n  const socketRef = useRef();\n\n  const randomWords = require('random-words');\n\n  const pointsDictionary = {\n    easy: 1,\n    medium: 3,\n    hard: 5\n  };\n  useEffect(() => {\n    socketRef.current = io.connect(SERVER_IP);\n    socketRef.current.on(\"game-started\", msgData => {\n      setCurrentDrawer(msgData.currentDrawer);\n      setIsGameStarted(msgData.isGameStarted);\n    });\n    socketRef.current.on(\"player_connected\", msgData => {\n      setPlayerID(msgData.playerID);\n    });\n    socketRef.current.on(\"drawer_turn\", msgData => {\n      setCurrentDrawer(msgData.currentDrawer);\n      setSessionPoints(msgData.sessionPoints);\n      setIsWordWasSet(false);\n      setImg64BaseSrc(null);\n    });\n    socketRef.current.on(\"guesser_turn\", msgData => {\n      setWordToGuess(msgData.wordToDraw); // msg.wordToDraw is the word that the drawer draw according to the current base64 img\n\n      setWordLevel(msgData.wordLevel);\n      setImg64BaseSrc(msgData.image);\n    });\n    socketRef.current.on(\"other_user_disconnected\", msgData => {\n      console.log(`Is game started: ${msgData.isGameStarted}`);\n      setIsGameStarted(msgData.isGameStarted);\n      setSessionPoints(msgData.sessionPoints);\n    });\n    return () => socketRef.current.disconnect();\n  }, []);\n\n  const renderWelcomeView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isGameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Welcome View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" Welcome To Draw and Guess - Waiting for other player to join...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderWaitingView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Waiting View :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Waiting to drawer to send his picture... :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderChoosingView = () => {\n    let easyWord = randomWords();\n    let mediumWord = randomWords();\n    let hardWord = randomWords();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choosing-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Choosing view (Drawer)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClickWordFunc(easyWord, \"easy\"),\n        children: [\"Easy: \", easyWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClickWordFunc(mediumWord, \"medium\"),\n        children: [\"Medium: \", mediumWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onClickWordFunc(hardWord, \"hard\"),\n        children: [\"Hard: \", hardWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderDrawingView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [playerID === currentDrawer && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Drawing View :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 48\n      }, this), isWordWasSet && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"try-to-draw\",\n        children: [\" Please draw: \", wordToDraw]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(SketchCanvas, {\n        wordToDraw: wordToDraw,\n        socketRef: socketRef,\n        wordLevel: wordLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderGuessingView = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guessing-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Guessing View :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img64BaseSrc,\n        alt: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"guess-input-id\",\n        name: \"guess-input\",\n        onChange: e => onTextChange(e),\n        label: \"Guess here:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onGuessSubmit,\n        children: \"Send your Guess!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  };\n\n  let inputWord;\n\n  const onTextChange = e => {\n    inputWord = e.target.value;\n    e.preventDefault();\n  };\n\n  const onGuessSubmit = () => {\n    if (wordToGuess === inputWord) {\n      let totalSessionPoints = sessionPoints + pointsDictionary[wordLevel];\n      alert(`you have earned ${pointsDictionary[wordLevel]} points!`);\n      socketRef.current.emit(\"guesser_turn_finished\", {\n        totalSessionPoints: totalSessionPoints\n      });\n      setSessionPoints(totalSessionPoints);\n    } else {\n      alert(\"Wrong guess... Please try again\");\n      inputWord = \"\";\n      document.getElementById(\"guess-input-id\").value = inputWord;\n    }\n  };\n\n  const onClickWordFunc = (word, wordLevel) => {\n    setWordToDraw(word);\n    setWordLevel(wordLevel);\n    setIsWordWasSet(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" GUESS & DRAW \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Session Points: \", sessionPoints, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), !isGameStarted && renderWelcomeView(), isGameStarted && playerID === currentDrawer && !isWordWasSet && renderChoosingView(), isGameStarted && playerID === currentDrawer && isWordWasSet && renderDrawingView(), isGameStarted && playerID !== currentDrawer && img64BaseSrc && renderGuessingView(), isGameStarted && playerID !== currentDrawer && !img64BaseSrc && renderWaitingView()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Idago2eOSL0kZNVD3K89Dx/+Its=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/src/App.js"],"names":["React","useEffect","useRef","useState","io","TextField","Container","Input","Button","Box","Heading","SketchCanvas","SERVER_IP","App","isWordWasSet","setIsWordWasSet","isGameStarted","setIsGameStarted","currentDrawer","setCurrentDrawer","wordToDraw","setWordToDraw","wordToGuess","setWordToGuess","playerID","setPlayerID","wordLevel","setWordLevel","img64BaseSrc","setImg64BaseSrc","sessionPoints","setSessionPoints","socketRef","randomWords","require","pointsDictionary","easy","medium","hard","current","connect","on","msgData","image","console","log","disconnect","renderWelcomeView","renderWaitingView","renderChoosingView","easyWord","mediumWord","hardWord","onClickWordFunc","renderDrawingView","renderGuessingView","e","onTextChange","onGuessSubmit","inputWord","target","value","preventDefault","totalSessionPoints","alert","emit","document","getElementById","word"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\nimport io from \"socket.io-client\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Container, Input, Button, Box, Heading } from \"@chakra-ui/react\";\n\nimport SketchCanvas from \"./components/SketchCanvas\";\nimport {SERVER_IP} from \"./constants.js\";\n\nexport function App() {\n\n    const [isWordWasSet, setIsWordWasSet] = useState(false);\n    const [isGameStarted, setIsGameStarted] = useState(false);\n    const [currentDrawer, setCurrentDrawer] = useState(0);\n    const [wordToDraw, setWordToDraw] = useState(null);\n    const [wordToGuess, setWordToGuess] = useState(null);\n    const [playerID, setPlayerID] = useState(null);\n    const [wordLevel, setWordLevel] = useState(null);\n    const [img64BaseSrc, setImg64BaseSrc] = useState(null);\n    const [sessionPoints, setSessionPoints] = useState(0);\n    const socketRef = useRef()\n    const randomWords = require('random-words');\n    const pointsDictionary = {easy: 1, medium: 3, hard: 5}\n\n\n    useEffect(() => {\n            socketRef.current = io.connect(SERVER_IP);\n\n            socketRef.current.on(\"game-started\", (msgData) => {\n                setCurrentDrawer(msgData.currentDrawer);\n                setIsGameStarted(msgData.isGameStarted);\n            })\n\n            socketRef.current.on(\"player_connected\", (msgData) => {\n                setPlayerID(msgData.playerID);\n            });\n\n            socketRef.current.on(\"drawer_turn\", (msgData) => {\n                setCurrentDrawer(msgData.currentDrawer);\n                setSessionPoints(msgData.sessionPoints);\n                setIsWordWasSet(false);\n                setImg64BaseSrc(null)\n            })\n\n            socketRef.current.on(\"guesser_turn\", (msgData) => {\n                setWordToGuess(msgData.wordToDraw); // msg.wordToDraw is the word that the drawer draw according to the current base64 img\n                setWordLevel(msgData.wordLevel);\n                setImg64BaseSrc(msgData.image);\n            })\n\n            socketRef.current.on(\"other_user_disconnected\", (msgData) => {\n                console.log(`Is game started: ${msgData.isGameStarted}`)\n                setIsGameStarted(msgData.isGameStarted);\n                setSessionPoints(msgData.sessionPoints)\n            })\n\n            return () => socketRef.current.disconnect()\n        }, []\n    )\n\n    const renderWelcomeView = () => {\n        return (\n            <div>\n                {!isGameStarted &&\n                    <div className=\"welcome-view-container\">\n                        <h2> Welcome View</h2>\n                        <h2> Welcome To Draw and Guess - Waiting for other player to join...</h2>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    const renderWaitingView = () => {\n        return (\n            <div>\n                <h2> Waiting View :</h2>\n                <h2> Waiting to drawer to send his picture... :</h2>\n            </div>\n        )\n    }\n\n    const renderChoosingView = () => {\n        let easyWord = randomWords();\n        let mediumWord = randomWords();\n        let hardWord = randomWords();\n        return (\n            <div className=\"choosing-buttons\">\n                <h2> Choosing view (Drawer)</h2>\n                <button onClick={() => onClickWordFunc(easyWord, \"easy\")}>Easy: {easyWord}</button>\n                <button onClick={() => onClickWordFunc(mediumWord, \"medium\")}>Medium: {mediumWord}</button>\n                <button onClick={() => onClickWordFunc(hardWord, \"hard\")}>Hard: {hardWord}</button>\n            </div>\n        )\n    }\n\n    const renderDrawingView = () => {\n        return (\n            <div>\n                {playerID === currentDrawer && <h2> Drawing View :</h2>}\n                {isWordWasSet && <h1 className=\"try-to-draw\"> Please draw: {wordToDraw}</h1>}\n                <SketchCanvas wordToDraw={wordToDraw} socketRef={socketRef} wordLevel={wordLevel}/>\n            </div>\n        )\n    }\n\n    const renderGuessingView = () => {\n        return (\n            <div className = \"guessing-view\">\n                <h2> Guessing View :</h2>\n                <img src={img64BaseSrc} alt={null}/>\n                <TextField id=\"guess-input-id\" name=\"guess-input\"\n                           onChange={(e) => onTextChange(e)} label=\"Guess here:\"/>\n                <button onClick={onGuessSubmit}>Send your Guess!</button>\n            </div>\n        )\n    }\n\n    let inputWord;\n    const onTextChange = (e) => {\n        inputWord = e.target.value;\n        e.preventDefault();\n    }\n\n    const onGuessSubmit = () => {\n        if (wordToGuess === inputWord) {\n            let totalSessionPoints = sessionPoints + pointsDictionary[wordLevel];\n            alert(`you have earned ${pointsDictionary[wordLevel]} points!`);\n            socketRef.current.emit(\"guesser_turn_finished\", {totalSessionPoints: totalSessionPoints})\n            setSessionPoints(totalSessionPoints);\n        } else {\n            alert(\"Wrong guess... Please try again\");\n            inputWord = \"\";\n            document.getElementById(\"guess-input-id\").value = inputWord;\n        }\n    }\n\n    const onClickWordFunc = (word, wordLevel) => {\n        setWordToDraw(word)\n        setWordLevel(wordLevel);\n        setIsWordWasSet(true);\n    }\n\n    return (\n        <div>\n            <h1> GUESS & DRAW </h1>\n            <h2> Session Points: {sessionPoints} </h2>\n\n            {!isGameStarted && renderWelcomeView()}\n            {isGameStarted && playerID === currentDrawer && !isWordWasSet && renderChoosingView()}\n            {isGameStarted && playerID === currentDrawer && isWordWasSet && renderDrawingView()}\n            {isGameStarted && playerID !== currentDrawer && img64BaseSrc && renderGuessingView()}\n            {isGameStarted && playerID !== currentDrawer && !img64BaseSrc && renderWaitingView()}\n        </div>\n    )\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}