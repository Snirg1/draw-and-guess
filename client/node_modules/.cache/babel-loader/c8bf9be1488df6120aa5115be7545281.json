{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/color-mode-provider.tsx\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\"; // src/color-mode-context.ts\n\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\n\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n\n  return context;\n}\n\nfunction useColorModeValue(light, dark) {\n  const {\n    colorMode\n  } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n} // src/color-mode.utils.ts\n\n\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\n\nfunction getColorModeUtils() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    preventTransition = true\n  } = options;\n  const utils = {\n    setDataset: value => {\n      const cleanup = preventTransition ? utils.preventTransition() : void 0;\n      document.documentElement.dataset.theme = value;\n      document.documentElement.style.colorScheme = value;\n      cleanup == null ? void 0 : cleanup();\n    },\n\n    setClassName(dark) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light);\n      document.body.classList.remove(dark ? classNames.light : classNames.dark);\n    },\n\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\");\n    },\n\n    getSystemTheme(fallback) {\n      const dark = utils.query().matches ?? fallback === \"dark\";\n      return dark ? \"dark\" : \"light\";\n    },\n\n    addListener(fn) {\n      const mql = utils.query();\n\n      const listener = e => {\n        fn(e.matches ? \"dark\" : \"light\");\n      };\n\n      if (typeof mql.addListener === \"function\") mql.addListener(listener);else mql.addEventListener(\"change\", listener);\n      return () => {\n        if (typeof mql.removeListener === \"function\") mql.removeListener(listener);else mql.removeEventListener(\"change\", listener);\n      };\n    },\n\n    preventTransition() {\n      const css = document.createElement(\"style\");\n      css.appendChild(document.createTextNode(`*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`));\n      document.head.appendChild(css);\n      return () => {\n        ;\n\n        (() => window.getComputedStyle(document.body))();\n\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css);\n          });\n        });\n      };\n    }\n\n  };\n  return utils;\n} // src/storage-manager.ts\n\n\nvar STORAGE_KEY = \"chakra-ui-color-mode\";\n\nfunction createLocalStorageManager(key) {\n  return {\n    ssr: false,\n    type: \"localStorage\",\n\n    get(init) {\n      if (!(globalThis == null ? void 0 : globalThis.document)) return init;\n      let value;\n\n      try {\n        value = localStorage.getItem(key) || init;\n      } catch (e) {}\n\n      return value || init;\n    },\n\n    set(value) {\n      try {\n        localStorage.setItem(key, value);\n      } catch (e) {}\n    }\n\n  };\n}\n\nvar localStorageManager = createLocalStorageManager(STORAGE_KEY);\n\nfunction parseCookie(cookie, key) {\n  const match = cookie.match(new RegExp(`(^| )${key}=([^;]+)`));\n  return match == null ? void 0 : match[2];\n}\n\nfunction createCookieStorageManager(key, cookie) {\n  return {\n    ssr: !!cookie,\n    type: \"cookie\",\n\n    get(init) {\n      if (cookie) return parseCookie(cookie, key);\n      if (!(globalThis == null ? void 0 : globalThis.document)) return init;\n      return parseCookie(document.cookie, key) || init;\n    },\n\n    set(value) {\n      document.cookie = `${key}=${value}; max-age=31536000; path=/`;\n    }\n\n  };\n}\n\nvar cookieStorageManager = createCookieStorageManager(STORAGE_KEY);\n\nvar cookieStorageManagerSSR = cookie => createCookieStorageManager(STORAGE_KEY, cookie); // src/color-mode-provider.tsx\n\n\nvar noop = () => {};\n\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\n\nfunction ColorModeProvider(props) {\n  const {\n    value,\n    children,\n    options: {\n      useSystemColorMode,\n      initialColorMode,\n      disableTransitionOnChange\n    } = {},\n    colorModeManager = localStorageManager\n  } = props;\n  const defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  const [colorMode, rawSetColorMode] = useState(() => getTheme(colorModeManager, defaultColorMode));\n  const [resolvedColorMode, setResolvedColorMode] = useState(() => getTheme(colorModeManager));\n  const {\n    getSystemTheme,\n    setClassName,\n    setDataset,\n    addListener\n  } = useMemo(() => getColorModeUtils({\n    preventTransition: disableTransitionOnChange\n  }), [disableTransitionOnChange]);\n  const resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  const setColorMode = useCallback(value2 => {\n    const resolved = value2 === \"system\" ? getSystemTheme() : value2;\n    rawSetColorMode(resolved);\n    setClassName(resolved === \"dark\");\n    setDataset(resolved);\n    colorModeManager.set(resolved);\n  }, [colorModeManager, getSystemTheme, setClassName, setDataset]);\n  useSafeLayoutEffect(() => {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  useEffect(() => {\n    const managerValue = colorModeManager.get();\n\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  const toggleColorMode = useCallback(() => {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  useEffect(() => {\n    if (!useSystemColorMode) return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  const context = useMemo(() => ({\n    colorMode: value ?? resolvedValue,\n    toggleColorMode: value ? noop : toggleColorMode,\n    setColorMode: value ? noop : setColorMode\n  }), [resolvedValue, toggleColorMode, setColorMode, value]);\n  return /* @__PURE__ */React.createElement(ColorModeContext.Provider, {\n    value: context\n  }, children);\n}\n\nColorModeProvider.displayName = \"ColorModeProvider\";\n\nfunction DarkMode(props) {\n  const context = useMemo(() => ({\n    colorMode: \"dark\",\n    toggleColorMode: noop,\n    setColorMode: noop\n  }), []);\n  return /* @__PURE__ */React.createElement(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\n\nDarkMode.displayName = \"DarkMode\";\n\nfunction LightMode(props) {\n  const context = useMemo(() => ({\n    colorMode: \"light\",\n    toggleColorMode: noop,\n    setColorMode: noop\n  }), []);\n  return /* @__PURE__ */React.createElement(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\n\nLightMode.displayName = \"LightMode\"; // src/color-mode-script.tsx\n\nvar VALID_VALUES = /* @__PURE__ */new Set([\"dark\", \"light\", \"system\"]);\n\nfunction normalize(initialColorMode) {\n  let value = initialColorMode;\n  if (!VALID_VALUES.has(value)) value = \"light\";\n  return value;\n}\n\nfunction getScriptSrc() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\"\n  } = props;\n  const init = normalize(initialColorMode);\n  const isCookie = type === \"cookie\";\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `;\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `;\n  const fn = isCookie ? cookieScript : localStorageScript;\n  return `!${fn}`.trim();\n}\n\nfunction ColorModeScript() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return /* @__PURE__ */React.createElement(\"script\", {\n    id: \"chakra-script\",\n    dangerouslySetInnerHTML: {\n      __html: getScriptSrc(props)\n    }\n  });\n}\n\nexport { ColorModeContext, ColorModeProvider, ColorModeScript, DarkMode, LightMode, cookieStorageManager, cookieStorageManagerSSR, createCookieStorageManager, createLocalStorageManager, getScriptSrc, localStorageManager, useColorMode, useColorModeValue };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/color-mode/dist/index.esm.js"],"names":["React","useSafeLayoutEffect","useCallback","useEffect","useMemo","useState","createContext","useContext","ColorModeContext","displayName","useColorMode","context","Error","useColorModeValue","light","dark","colorMode","classNames","getColorModeUtils","options","preventTransition","utils","setDataset","value","cleanup","document","documentElement","dataset","theme","style","colorScheme","setClassName","body","classList","add","remove","query","window","matchMedia","getSystemTheme","fallback","matches","addListener","fn","mql","listener","e","addEventListener","removeListener","removeEventListener","css","createElement","appendChild","createTextNode","head","getComputedStyle","requestAnimationFrame","removeChild","STORAGE_KEY","createLocalStorageManager","key","ssr","type","get","init","globalThis","localStorage","getItem","set","setItem","localStorageManager","parseCookie","cookie","match","RegExp","createCookieStorageManager","cookieStorageManager","cookieStorageManagerSSR","noop","getTheme","manager","ColorModeProvider","props","children","useSystemColorMode","initialColorMode","disableTransitionOnChange","colorModeManager","defaultColorMode","rawSetColorMode","resolvedColorMode","setResolvedColorMode","resolvedValue","setColorMode","value2","resolved","managerValue","toggleColorMode","Provider","DarkMode","LightMode","VALID_VALUES","Set","normalize","has","getScriptSrc","storageKey","isCookie","cookieScript","localStorageScript","trim","ColorModeScript","id","dangerouslySetInnerHTML","__html"],"mappings":"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","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/color-mode-provider.tsx\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\n\n// src/color-mode-context.ts\nimport { createContext, useContext } from \"react\";\nvar ColorModeContext = createContext({});\nColorModeContext.displayName = \"ColorModeContext\";\nfunction useColorMode() {\n  const context = useContext(ColorModeContext);\n  if (context === void 0) {\n    throw new Error(\"useColorMode must be used within a ColorModeProvider\");\n  }\n  return context;\n}\nfunction useColorModeValue(light, dark) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\n// src/color-mode.utils.ts\nvar classNames = {\n  light: \"chakra-ui-light\",\n  dark: \"chakra-ui-dark\"\n};\nfunction getColorModeUtils(options = {}) {\n  const { preventTransition = true } = options;\n  const utils = {\n    setDataset: (value) => {\n      const cleanup = preventTransition ? utils.preventTransition() : void 0;\n      document.documentElement.dataset.theme = value;\n      document.documentElement.style.colorScheme = value;\n      cleanup == null ? void 0 : cleanup();\n    },\n    setClassName(dark) {\n      document.body.classList.add(dark ? classNames.dark : classNames.light);\n      document.body.classList.remove(dark ? classNames.light : classNames.dark);\n    },\n    query() {\n      return window.matchMedia(\"(prefers-color-scheme: dark)\");\n    },\n    getSystemTheme(fallback) {\n      const dark = utils.query().matches ?? fallback === \"dark\";\n      return dark ? \"dark\" : \"light\";\n    },\n    addListener(fn) {\n      const mql = utils.query();\n      const listener = (e) => {\n        fn(e.matches ? \"dark\" : \"light\");\n      };\n      if (typeof mql.addListener === \"function\")\n        mql.addListener(listener);\n      else\n        mql.addEventListener(\"change\", listener);\n      return () => {\n        if (typeof mql.removeListener === \"function\")\n          mql.removeListener(listener);\n        else\n          mql.removeEventListener(\"change\", listener);\n      };\n    },\n    preventTransition() {\n      const css = document.createElement(\"style\");\n      css.appendChild(document.createTextNode(`*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`));\n      document.head.appendChild(css);\n      return () => {\n        ;\n        (() => window.getComputedStyle(document.body))();\n        requestAnimationFrame(() => {\n          requestAnimationFrame(() => {\n            document.head.removeChild(css);\n          });\n        });\n      };\n    }\n  };\n  return utils;\n}\n\n// src/storage-manager.ts\nvar STORAGE_KEY = \"chakra-ui-color-mode\";\nfunction createLocalStorageManager(key) {\n  return {\n    ssr: false,\n    type: \"localStorage\",\n    get(init) {\n      if (!(globalThis == null ? void 0 : globalThis.document))\n        return init;\n      let value;\n      try {\n        value = localStorage.getItem(key) || init;\n      } catch (e) {\n      }\n      return value || init;\n    },\n    set(value) {\n      try {\n        localStorage.setItem(key, value);\n      } catch (e) {\n      }\n    }\n  };\n}\nvar localStorageManager = createLocalStorageManager(STORAGE_KEY);\nfunction parseCookie(cookie, key) {\n  const match = cookie.match(new RegExp(`(^| )${key}=([^;]+)`));\n  return match == null ? void 0 : match[2];\n}\nfunction createCookieStorageManager(key, cookie) {\n  return {\n    ssr: !!cookie,\n    type: \"cookie\",\n    get(init) {\n      if (cookie)\n        return parseCookie(cookie, key);\n      if (!(globalThis == null ? void 0 : globalThis.document))\n        return init;\n      return parseCookie(document.cookie, key) || init;\n    },\n    set(value) {\n      document.cookie = `${key}=${value}; max-age=31536000; path=/`;\n    }\n  };\n}\nvar cookieStorageManager = createCookieStorageManager(STORAGE_KEY);\nvar cookieStorageManagerSSR = (cookie) => createCookieStorageManager(STORAGE_KEY, cookie);\n\n// src/color-mode-provider.tsx\nvar noop = () => {\n};\nfunction getTheme(manager, fallback) {\n  return manager.type === \"cookie\" && manager.ssr ? manager.get(fallback) : fallback;\n}\nfunction ColorModeProvider(props) {\n  const {\n    value,\n    children,\n    options: {\n      useSystemColorMode,\n      initialColorMode,\n      disableTransitionOnChange\n    } = {},\n    colorModeManager = localStorageManager\n  } = props;\n  const defaultColorMode = initialColorMode === \"dark\" ? \"dark\" : \"light\";\n  const [colorMode, rawSetColorMode] = useState(() => getTheme(colorModeManager, defaultColorMode));\n  const [resolvedColorMode, setResolvedColorMode] = useState(() => getTheme(colorModeManager));\n  const { getSystemTheme, setClassName, setDataset, addListener } = useMemo(() => getColorModeUtils({ preventTransition: disableTransitionOnChange }), [disableTransitionOnChange]);\n  const resolvedValue = initialColorMode === \"system\" && !colorMode ? resolvedColorMode : colorMode;\n  const setColorMode = useCallback((value2) => {\n    const resolved = value2 === \"system\" ? getSystemTheme() : value2;\n    rawSetColorMode(resolved);\n    setClassName(resolved === \"dark\");\n    setDataset(resolved);\n    colorModeManager.set(resolved);\n  }, [colorModeManager, getSystemTheme, setClassName, setDataset]);\n  useSafeLayoutEffect(() => {\n    if (initialColorMode === \"system\") {\n      setResolvedColorMode(getSystemTheme());\n    }\n  }, []);\n  useEffect(() => {\n    const managerValue = colorModeManager.get();\n    if (managerValue) {\n      setColorMode(managerValue);\n      return;\n    }\n    if (initialColorMode === \"system\") {\n      setColorMode(\"system\");\n      return;\n    }\n    setColorMode(defaultColorMode);\n  }, [colorModeManager, defaultColorMode, initialColorMode, setColorMode]);\n  const toggleColorMode = useCallback(() => {\n    setColorMode(resolvedValue === \"dark\" ? \"light\" : \"dark\");\n  }, [resolvedValue, setColorMode]);\n  useEffect(() => {\n    if (!useSystemColorMode)\n      return;\n    return addListener(setColorMode);\n  }, [useSystemColorMode, addListener, setColorMode]);\n  const context = useMemo(() => ({\n    colorMode: value ?? resolvedValue,\n    toggleColorMode: value ? noop : toggleColorMode,\n    setColorMode: value ? noop : setColorMode\n  }), [resolvedValue, toggleColorMode, setColorMode, value]);\n  return /* @__PURE__ */ React.createElement(ColorModeContext.Provider, {\n    value: context\n  }, children);\n}\nColorModeProvider.displayName = \"ColorModeProvider\";\nfunction DarkMode(props) {\n  const context = useMemo(() => ({\n    colorMode: \"dark\",\n    toggleColorMode: noop,\n    setColorMode: noop\n  }), []);\n  return /* @__PURE__ */ React.createElement(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\nDarkMode.displayName = \"DarkMode\";\nfunction LightMode(props) {\n  const context = useMemo(() => ({\n    colorMode: \"light\",\n    toggleColorMode: noop,\n    setColorMode: noop\n  }), []);\n  return /* @__PURE__ */ React.createElement(ColorModeContext.Provider, {\n    value: context,\n    ...props\n  });\n}\nLightMode.displayName = \"LightMode\";\n\n// src/color-mode-script.tsx\nvar VALID_VALUES = /* @__PURE__ */ new Set([\"dark\", \"light\", \"system\"]);\nfunction normalize(initialColorMode) {\n  let value = initialColorMode;\n  if (!VALID_VALUES.has(value))\n    value = \"light\";\n  return value;\n}\nfunction getScriptSrc(props = {}) {\n  const {\n    initialColorMode = \"light\",\n    type = \"localStorage\",\n    storageKey: key = \"chakra-ui-color-mode\"\n  } = props;\n  const init = normalize(initialColorMode);\n  const isCookie = type === \"cookie\";\n  const cookieScript = `(function(){try{var a=function(o){var l=\"(prefers-color-scheme: dark)\",v=window.matchMedia(l).matches?\"dark\":\"light\",e=o===\"system\"?v:o,d=document.documentElement,m=document.body,i=\"chakra-ui-light\",n=\"chakra-ui-dark\",s=e===\"dark\";return m.classList.add(s?n:i),m.classList.remove(s?i:n),d.style.colorScheme=e,d.dataset.theme=e,e},u=a,h=\"${init}\",r=\"${key}\",t=document.cookie.match(new RegExp(\"(^| )\".concat(r,\"=([^;]+)\"))),c=t?t[2]:null;c?a(c):document.cookie=\"\".concat(r,\"=\").concat(a(h),\"; max-age=31536000; path=/\")}catch(a){}})();\n  `;\n  const localStorageScript = `(function(){try{var a=function(c){var v=\"(prefers-color-scheme: dark)\",h=window.matchMedia(v).matches?\"dark\":\"light\",r=c===\"system\"?h:c,o=document.documentElement,s=document.body,l=\"chakra-ui-light\",d=\"chakra-ui-dark\",i=r===\"dark\";return s.classList.add(i?d:l),s.classList.remove(i?l:d),o.style.colorScheme=r,o.dataset.theme=r,r},n=a,m=\"${init}\",e=\"${key}\",t=localStorage.getItem(e);t?a(t):localStorage.setItem(e,a(m))}catch(a){}})();\n  `;\n  const fn = isCookie ? cookieScript : localStorageScript;\n  return `!${fn}`.trim();\n}\nfunction ColorModeScript(props = {}) {\n  return /* @__PURE__ */ React.createElement(\"script\", {\n    id: \"chakra-script\",\n    dangerouslySetInnerHTML: { __html: getScriptSrc(props) }\n  });\n}\nexport {\n  ColorModeContext,\n  ColorModeProvider,\n  ColorModeScript,\n  DarkMode,\n  LightMode,\n  cookieStorageManager,\n  cookieStorageManagerSSR,\n  createCookieStorageManager,\n  createLocalStorageManager,\n  getScriptSrc,\n  localStorageManager,\n  useColorMode,\n  useColorModeValue\n};\n"]},"metadata":{},"sourceType":"module"}