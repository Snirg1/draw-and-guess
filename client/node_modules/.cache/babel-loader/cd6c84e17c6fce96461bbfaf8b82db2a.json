{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/switch.tsx\n\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport { chakra, forwardRef, omitThemingProps, useMultiStyleConfig } from \"@chakra-ui/system\"; // ../../utilities/shared-utils/dist/index.esm.js\n\nvar cx = function () {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\n\nvar dataAttr = condition => condition ? \"\" : void 0; // src/switch.tsx\n\n\nimport { useMemo } from \"react\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  const styles = useMultiStyleConfig(\"Switch\", props);\n  const {\n    spacing = \"0.5rem\",\n    children,\n    ...ownProps\n  } = omitThemingProps(props);\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps\n  } = useCheckbox(ownProps);\n  const containerStyles = useMemo(() => ({\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    lineHeight: 0,\n    ...styles.container\n  }), [styles.container]);\n  const trackStyles = useMemo(() => ({\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track\n  }), [styles.track]);\n  const labelStyles = useMemo(() => ({\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  }), [spacing, styles.label]);\n  return /* @__PURE__ */React.createElement(chakra.label, { ...getRootProps(),\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: \"chakra-switch__input\",\n    ...getInputProps({}, ref)\n  }), /* @__PURE__ */React.createElement(chakra.span, { ...getCheckboxProps(),\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }, /* @__PURE__ */React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /* @__PURE__ */React.createElement(chakra.span, {\n    className: \"chakra-switch__label\",\n    ...getLabelProps(),\n    __css: labelStyles\n  }, children));\n});\nSwitch.displayName = \"Switch\";\nexport { Switch };","map":{"version":3,"sources":["/Users/Snirgu1/Desktop/draw-and-guess/client/node_modules/@chakra-ui/switch/dist/index.esm.js"],"names":["React","useCheckbox","chakra","forwardRef","omitThemingProps","useMultiStyleConfig","cx","classNames","filter","Boolean","join","dataAttr","condition","useMemo","Switch","Switch2","props","ref","styles","spacing","children","ownProps","state","getInputProps","getCheckboxProps","getRootProps","getLabelProps","containerStyles","display","position","verticalAlign","lineHeight","container","trackStyles","flexShrink","justifyContent","boxSizing","cursor","track","labelStyles","userSelect","marginStart","label","createElement","className","__css","span","thumb","isChecked","isHovered","displayName"],"mappings":"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","sourcesContent":["// ../../react-shim.js\nimport React from \"react\";\n\n// src/switch.tsx\nimport { useCheckbox } from \"@chakra-ui/checkbox\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/dist/index.esm.js\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/switch.tsx\nimport { useMemo } from \"react\";\nvar Switch = forwardRef(function Switch2(props, ref) {\n  const styles = useMultiStyleConfig(\"Switch\", props);\n  const { spacing = \"0.5rem\", children, ...ownProps } = omitThemingProps(props);\n  const {\n    state,\n    getInputProps,\n    getCheckboxProps,\n    getRootProps,\n    getLabelProps\n  } = useCheckbox(ownProps);\n  const containerStyles = useMemo(() => ({\n    display: \"inline-block\",\n    position: \"relative\",\n    verticalAlign: \"middle\",\n    lineHeight: 0,\n    ...styles.container\n  }), [styles.container]);\n  const trackStyles = useMemo(() => ({\n    display: \"inline-flex\",\n    flexShrink: 0,\n    justifyContent: \"flex-start\",\n    boxSizing: \"content-box\",\n    cursor: \"pointer\",\n    ...styles.track\n  }), [styles.track]);\n  const labelStyles = useMemo(() => ({\n    userSelect: \"none\",\n    marginStart: spacing,\n    ...styles.label\n  }), [spacing, styles.label]);\n  return /* @__PURE__ */ React.createElement(chakra.label, {\n    ...getRootProps(),\n    className: cx(\"chakra-switch\", props.className),\n    __css: containerStyles\n  }, /* @__PURE__ */ React.createElement(\"input\", {\n    className: \"chakra-switch__input\",\n    ...getInputProps({}, ref)\n  }), /* @__PURE__ */ React.createElement(chakra.span, {\n    ...getCheckboxProps(),\n    className: \"chakra-switch__track\",\n    __css: trackStyles\n  }, /* @__PURE__ */ React.createElement(chakra.span, {\n    __css: styles.thumb,\n    className: \"chakra-switch__thumb\",\n    \"data-checked\": dataAttr(state.isChecked),\n    \"data-hover\": dataAttr(state.isHovered)\n  })), children && /* @__PURE__ */ React.createElement(chakra.span, {\n    className: \"chakra-switch__label\",\n    ...getLabelProps(),\n    __css: labelStyles\n  }, children));\n});\nSwitch.displayName = \"Switch\";\nexport {\n  Switch\n};\n"]},"metadata":{},"sourceType":"module"}